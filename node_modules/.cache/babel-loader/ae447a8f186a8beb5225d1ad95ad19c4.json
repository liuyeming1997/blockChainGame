{"ast":null,"code":"import _toConsumableArray from \"E:\\\\masterstudy\\\\2022S1\\\\cycurrency\\\\research\\\\blockchain_game\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"E:\\\\masterstudy\\\\2022S1\\\\cycurrency\\\\research\\\\blockchain_game\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"E:\\\\masterstudy\\\\2022S1\\\\cycurrency\\\\research\\\\blockchain_game\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"E:\\\\masterstudy\\\\2022S1\\\\cycurrency\\\\research\\\\blockchain_game\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"E:\\\\masterstudy\\\\2022S1\\\\cycurrency\\\\research\\\\blockchain_game\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\masterstudy\\\\2022S1\\\\cycurrency\\\\research\\\\blockchain_game\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"E:\\\\masterstudy\\\\2022S1\\\\cycurrency\\\\research\\\\blockchain_game\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"E:\\\\masterstudy\\\\2022S1\\\\cycurrency\\\\research\\\\blockchain_game\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\masterstudy\\\\2022S1\\\\cycurrency\\\\research\\\\blockchain_game\\\\src\\\\components\\\\App.js\";\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\nimport './App.css';\nimport MemoryToken from '../abis/MemoryToken.json';\nimport sha256 from 'crypto-js/sha256'; //import { message, Button, Space } from 'antd';\n\nimport brain from '../brain.png';\nvar CARD_ARRAY = [{\n  name: 'fries',\n  img: '/images/fries.png'\n}, {\n  name: 'cheeseburger',\n  img: '/images/cheeseburger.png'\n}, {\n  name: 'ice-cream',\n  img: '/images/ice-cream.png'\n}, {\n  name: 'pizza',\n  img: '/images/pizza.png'\n}, {\n  name: 'milkshake',\n  img: '/images/milkshake.png'\n}, {\n  name: 'hotdog',\n  img: '/images/hotdog.png'\n}, {\n  name: 'fries',\n  img: '/images/fries.png'\n}, {\n  name: 'cheeseburger',\n  img: '/images/cheeseburger.png'\n}, {\n  name: 'ice-cream',\n  img: '/images/ice-cream.png'\n}, {\n  name: 'pizza',\n  img: '/images/pizza.png'\n}, {\n  name: 'milkshake',\n  img: '/images/milkshake.png'\n}, {\n  name: 'hotdog',\n  img: '/images/hotdog.png'\n}];\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n                this.setState({\n                  cardArray: CARD_ARRAY.sort(function () {\n                    return 0.5 - Math.random();\n                  })\n                });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context2.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                _context2.next = 7;\n                break;\n\n              case 6:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\n                }\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var web3, accounts, networkId, networkData, abi, address, token, totalSupply, balanceOf, i, id, tokenURI;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                web3 = window.web3;\n                _context3.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context3.sent;\n                this.setState({\n                  account: accounts[0]\n                });\n                _context3.next = 7;\n                return web3.eth.net.getId();\n\n              case 7:\n                networkId = _context3.sent;\n                networkData = MemoryToken.networks[networkId];\n\n                if (!networkData) {\n                  _context3.next = 39;\n                  break;\n                }\n\n                abi = MemoryToken.abi;\n                address = networkData.address;\n                token = new web3.eth.Contract(abi, address);\n                this.setState({\n                  token: token\n                });\n                _context3.next = 16;\n                return token.methods.totalSupply().call();\n\n              case 16:\n                totalSupply = _context3.sent;\n                this.setState({\n                  totalSupply: totalSupply\n                }); //await token.methods.setNonce1(sha256(2)).call()\n\n                _context3.next = 20;\n                return token.methods.joinGame(1, accounts[0]).call();\n\n              case 20:\n                _context3.next = 22;\n                return token.methods.startGame().call();\n\n              case 22:\n                _context3.next = 24;\n                return token.methods.balanceOf(accounts[0]).call();\n\n              case 24:\n                balanceOf = _context3.sent;\n                i = 0;\n\n              case 26:\n                if (!(i < balanceOf)) {\n                  _context3.next = 37;\n                  break;\n                }\n\n                _context3.next = 29;\n                return token.methods.tokenOfOwnerByIndex(accounts[0], i).call();\n\n              case 29:\n                id = _context3.sent;\n                _context3.next = 32;\n                return token.methods.tokenURI(id).call();\n\n              case 32:\n                tokenURI = _context3.sent;\n                this.setState({\n                  tokenURIs: [].concat(_toConsumableArray(this.state.tokenURIs), [tokenURI])\n                });\n\n              case 34:\n                i++;\n                _context3.next = 26;\n                break;\n\n              case 37:\n                _context3.next = 40;\n                break;\n\n              case 39:\n                alert('Smart contract not deployed to detected network.');\n\n              case 40:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }, {\n    key: \"defineWinned\",\n    ///////////////////////////////////////////////////////////////////\n    value: function defineWinned() {\n      var name = this.state.isClick == 1 ? '黑棋胜' : '白棋胜';\n      alert(name);\n    }\n  }, {\n    key: \"handleClickNew\",\n    value: function handleClickNew(index, indexs) {\n      var _this2 = this;\n\n      var state = this.state.isClickArr.findIndex(function (n) {\n        return n.idx == index && n.idxs == indexs;\n      });\n\n      if (state != -1) {\n        return;\n      }\n\n      this.setState({\n        data: this.state.data + 1,\n        idx: index,\n        idxs: indexs,\n        isClick: this.state.data % 2 === 0 ? 1 : 2,\n        isClickArr: this.state.isClickArr.concat([{\n          data: this.state.data + 1,\n          idx: index,\n          idxs: indexs,\n          isClick: this.state.data % 2 === 0 ? 1 : 2\n        }])\n      }, function () {\n        var letArr = _this2.state.twoArray.map(function (ele, index1) {\n          var arr = Array(20).fill([]);\n          var arrr = arr.map(function (item, row) {\n            arr[_this2.state.idx] = _this2.state.isClickArr.filter(function (eles, index2) {\n              return index1 == eles.idxs && eles.idx == row;\n            });\n            var arrData = arr[_this2.state.idx].length > 0 ? arr[_this2.state.idx][0] : '';\n            return arrData;\n          });\n          var arrs = Array(20).fill([]);\n          arrs[indexs][index] = arrr;\n          return arrs[indexs][index];\n        }); // (纵坐标，横坐标)[indexs][index]确定一个点的位置\n\n\n        console.log(letArr); // 按第一行、第二行...第二十行 纵坐标\n\n        console.log(index, 'index'); // 横坐标\n\n        console.log(indexs, 'indexs'); // 纵坐标\n        //列计数\n\n        _this2.state.token.methods.playMoveNew(index, indexs).estimateGas({\n          gas: 5000000\n        }, function (error, gasAmount) {\n          if (gasAmount == 5000000) console.log('Method ran out of gas');\n        });\n      });\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick(index, indexs) {\n      var _this3 = this;\n\n      var state = this.state.isClickArr.findIndex(function (n) {\n        return n.idx == index && n.idxs == indexs;\n      });\n\n      if (state != -1) {\n        return;\n      }\n\n      this.setState({\n        data: this.state.data + 1,\n        idx: index,\n        idxs: indexs,\n        isClick: this.state.data % 2 === 0 ? 1 : 2,\n        isClickArr: this.state.isClickArr.concat([{\n          data: this.state.data + 1,\n          idx: index,\n          idxs: indexs,\n          isClick: this.state.data % 2 === 0 ? 1 : 2\n        }])\n      }, function () {\n        var letArr = _this3.state.twoArray.map(function (ele, index1) {\n          var arr = Array(20).fill([]);\n          var arrr = arr.map(function (item, row) {\n            arr[_this3.state.idx] = _this3.state.isClickArr.filter(function (eles, index2) {\n              return index1 == eles.idxs && eles.idx == row;\n            });\n            var arrData = arr[_this3.state.idx].length > 0 ? arr[_this3.state.idx][0] : '';\n            return arrData;\n          });\n          var arrs = Array(20).fill([]);\n          arrs[indexs][index] = arrr;\n          return arrs[indexs][index];\n        }); // (纵坐标，横坐标)[indexs][index]确定一个点的位置\n\n\n        console.log(letArr); // 按第一行、第二行...第二十行 纵坐标\n\n        console.log(index, 'index'); // 横坐标\n\n        console.log(indexs, 'indexs'); // 纵坐标\n        //列计数\n\n        var columnCount = 0; // 向上下棋\n\n        for (var i = indexs + 1; i < 20; i++) {\n          if (letArr[i][index].isClick == _this3.state.isClick) {\n            columnCount++;\n          } else {\n            break;\n          }\n        } // 向下下棋\n\n\n        for (var _i = indexs - 1; _i >= 0; _i--) {\n          if (letArr[_i][index].isClick == _this3.state.isClick) {\n            columnCount++;\n          } else {\n            break;\n          }\n        }\n\n        if (columnCount >= 4) {\n          _this3.defineWinned();\n\n          columnCount = 0;\n          return;\n        } //行计数\n\n\n        var lineCount = 0; // 向左下棋\n\n        for (var _i2 = index + 1; _i2 < 20; _i2++) {\n          if (letArr[indexs][_i2].isClick == _this3.state.isClick) {\n            lineCount++;\n          } else {\n            break;\n          }\n        } // 向右下棋\n\n\n        for (var _i3 = index - 1; _i3 >= 0; _i3--) {\n          if (letArr[indexs][_i3].isClick == _this3.state.isClick) {\n            lineCount++;\n          } else {\n            break;\n          }\n        }\n\n        if (lineCount >= 4) {\n          _this3.defineWinned();\n\n          lineCount = 0;\n          return;\n        } //斜行计数-左斜 \\\n\n\n        var obliqueLeftCount = 0; // 向左上下棋↖\n\n        for (var _i4 = index + 1, j = indexs + 1; _i4 < 20 && j < 20; _i4++, j++) {\n          if (letArr[_i4][j].isClick == _this3.state.isClick) {\n            obliqueLeftCount++;\n          } else {\n            break;\n          }\n        } // 向左下下棋↘\n\n\n        for (var _i5 = index - 1, _j = indexs - 1; _i5 >= 0 && _j >= 0; _i5--, _j--) {\n          if (letArr[_j][_i5].isClick == _this3.state.isClick) {\n            obliqueLeftCount++;\n          } else {\n            break;\n          }\n        }\n\n        if (obliqueLeftCount >= 4) {\n          _this3.defineWinned();\n\n          obliqueLeftCount = 0;\n          return;\n        } //斜行计数-右斜 /\n\n\n        var obliqueRightCount = 0; // 向右上下棋↗\n\n        for (var _i6 = indexs + 1, _j2 = index - 1; _i6 < 20 && _j2 >= 0; _i6++, _j2--) {\n          if (letArr[_i6][_j2].isClick == _this3.state.isClick) {\n            obliqueRightCount++;\n          } else {\n            break;\n          }\n        } // 向左右下下棋↙\n\n\n        for (var _i7 = indexs - 1, _j3 = index + 1; _i7 >= 0 && _j3 < 20; _i7--, _j3++) {\n          if (letArr[_i7][_j3].isClick == _this3.state.isClick) {\n            obliqueRightCount++;\n          } else {\n            break;\n          }\n        }\n\n        console.log(obliqueRightCount, 'obliqueRightCount');\n\n        if (obliqueRightCount >= 4) {\n          _this3.defineWinned();\n\n          obliqueRightCount = 0;\n          return;\n        }\n      });\n    }\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.chooseImage = function (cardId) {\n      console.log(\"haha\");\n      cardId = cardId.toString();\n\n      if (_this.state.cardsWon.includes(cardId)) {\n        return window.location.origin + '/images/white.png';\n      } else if (_this.state.cardsChosenId.includes(cardId)) {\n        return CARD_ARRAY[cardId].img;\n      } else {\n        return window.location.origin + '/images/blank.png';\n      }\n    };\n\n    _this.flipCard = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(cardId) {\n        var alreadyChosen;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                alreadyChosen = _this.state.cardsChosen.length;\n\n                _this.setState({\n                  cardsChosen: [].concat(_toConsumableArray(_this.state.cardsChosen), [_this.state.cardArray[cardId].name]),\n                  cardsChosenId: [].concat(_toConsumableArray(_this.state.cardsChosenId), [cardId])\n                });\n\n                if (alreadyChosen === 1) {\n                  setTimeout(_this.checkForMatch, 100);\n                }\n\n              case 3:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.checkForMatch = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n      var optionOneId, optionTwoId;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              optionOneId = _this.state.cardsChosenId[0];\n              optionTwoId = _this.state.cardsChosenId[1];\n\n              if (optionOneId == optionTwoId) {\n                alert('You have clicked the same image!');\n              } else if (_this.state.cardsChosen[0] === _this.state.cardsChosen[1]) {\n                alert('You found a match');\n\n                _this.state.token.methods.mint(_this.state.account, window.location.origin + CARD_ARRAY[optionOneId].img.toString()).send({\n                  from: _this.state.account\n                }).on('transactionHash', function (hash) {\n                  _this.setState({\n                    cardsWon: [].concat(_toConsumableArray(_this.state.cardsWon), [optionOneId, optionTwoId]),\n                    tokenURIs: [].concat(_toConsumableArray(_this.state.tokenURIs), [CARD_ARRAY[optionOneId].img])\n                  });\n                });\n              } else {\n                alert('Sorry, try again');\n              }\n\n              _this.setState({\n                cardsChosen: [],\n                cardsChosenId: []\n              });\n\n              if (_this.state.cardsWon.length === CARD_ARRAY.length) {\n                alert('Congratulations! You found them all!');\n              }\n\n            case 5:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n    _this.state = {\n      account: '0x0',\n      token: null,\n      totalSupply: 0,\n      tokenURIs: [],\n      cardArray: [],\n      cardsChosen: [],\n      cardsChosenId: [],\n      cardsWon: [],\n      ///////////////////////\n      arr: Array(20).fill(null),\n      isClick: null,\n      data: 0,\n      // 点击黑白点的次数\n      idx: 0,\n      // 点击点的的横坐标\n      idxs: 0,\n      // 点击点的纵坐标\n      isClickArr: [{\n        data: null,\n        idx: null,\n        idxs: null,\n        isClick: null\n      }],\n      // 存放点击过的点的数组\n      twoArray: Array(20).fill([]),\n      // 存放点击过的点的数组\n      arrs: []\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var self = this;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"main\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"small\", {\n        className: \"text-muted\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        id: \"account\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 39\n        }\n      }, this.state.account)), this.state.arr.map(function (item, index) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"main-cell\",\n          key: index,\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 32\n          }\n        }, _this4.state.arr.map(function (ele, indexs) {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            className: \"main-cell-single\",\n            key: indexs,\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 44\n            }\n          },\n          /* {\r\n             this.state.data != 0 && this.state.isClickArr[this.state.data - 1].isClick == 1 && this.state.isClickArr[this.state.data - 1].idx == index && this.state.isClickArr[this.state.data - 1].idxs == indexs\r\n                 ? <div className='main-cell-black'></div>\r\n                 : this.state.data != 0 && this.state.isClickArr[this.state.data - 1].isClick == 2 && this.state.isClickArr[this.state.data - 1].idx == index && this.state.isClickArr[this.state.data - 1].idxs == indexs ? <div className='main-cell-white'></div>\r\n                     : ''\r\n          } */\n          _this4.state.isClickArr.map(function (items, indexss) {\n            return /*#__PURE__*/React.createElement(\"div\", {\n              key: indexss,\n              className: \"main-cell-click\",\n              onClick: function onClick() {\n                return self.handleClickNew(index, indexs);\n              },\n              __self: _this4,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 56\n              }\n            }, items.isClick == 1 && items.idx == index && items.idxs == indexs ? /*#__PURE__*/React.createElement(\"div\", {\n              className: \"main-cell-black\",\n              __self: _this4,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 63\n              }\n            }) : items.isClick == 2 && items.idx == index && items.idxs == indexs ? /*#__PURE__*/React.createElement(\"div\", {\n              className: \"main-cell-white\",\n              __self: _this4,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 394,\n                columnNumber: 130\n              }\n            }) : '');\n          }));\n        }));\n      }))\n      /*\r\n      <div>\r\n        <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\r\n          <a\r\n            className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\r\n            href=\"http://www.dappuniversity.com/bootcamp\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n          <img src={brain} width=\"30\" height=\"30\" className=\"d-inline-block align-top\" alt=\"\" />\r\n          &nbsp; Memory Tokens\r\n          </a>\r\n          <ul className=\"navbar-nav px-3\">\r\n            <li className=\"nav-item text-nowrap d-none d-sm-none d-sm-block\">\r\n              <small className=\"text-muted\"><span id=\"account\">{this.state.account}</span></small>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n        <div className=\"container-fluid mt-5\">\r\n          <div className=\"row\">\r\n            <main role=\"main\" className=\"col-lg-12 d-flex text-center\">\r\n              <div className=\"content mr-auto ml-auto\">\r\n                <h1 className=\"d-4\">haha</h1>\r\n                  <div className=\"grid mb-4\" >\r\n                  { this.state.cardArray.map((card, key) => {\r\n                    return(\r\n                      <img\r\n                        key={key}\r\n                        src={this.chooseImage(key)}\r\n                        data-id={key}\r\n                        onClick={(event) => {\r\n                          let cardId = event.target.getAttribute('data-id')\r\n                          if(!this.state.cardsWon.includes(cardId.toString())) {\r\n                            this.flipCard(cardId)\r\n                          }\r\n                        }}\r\n                      />\r\n                    )\r\n                  })}\r\n                  </div>\r\n                  <div>\r\n                  <h5>Tokens Collected:<span id=\"result\">&nbsp;{this.state.tokenURIs.length}</span></h5>\r\n                  <div className=\"grid mb-4\" >\r\n                    { this.state.tokenURIs.map((tokenURI, key) => {\r\n                      return(\r\n                        <img\r\n                          key={key}\r\n                          src={tokenURI}\r\n                        />\r\n                      )\r\n                    })}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </main>\r\n          </div>\r\n        </div>\r\n      </div>*/\n      ;\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["E:/masterstudy/2022S1/cycurrency/research/blockchain_game/src/components/App.js"],"names":["React","Component","Web3","MemoryToken","sha256","brain","CARD_ARRAY","name","img","App","loadWeb3","loadBlockchainData","setState","cardArray","sort","Math","random","window","ethereum","web3","enable","currentProvider","alert","eth","getAccounts","accounts","account","net","getId","networkId","networkData","networks","abi","address","token","Contract","methods","totalSupply","call","joinGame","startGame","balanceOf","i","tokenOfOwnerByIndex","id","tokenURI","tokenURIs","state","isClick","index","indexs","isClickArr","findIndex","n","idx","idxs","data","concat","letArr","twoArray","map","ele","index1","arr","Array","fill","arrr","item","row","filter","eles","index2","arrData","length","arrs","console","log","playMoveNew","estimateGas","gas","error","gasAmount","columnCount","defineWinned","lineCount","obliqueLeftCount","j","obliqueRightCount","props","chooseImage","cardId","toString","cardsWon","includes","location","origin","cardsChosenId","flipCard","alreadyChosen","cardsChosen","setTimeout","checkForMatch","optionOneId","optionTwoId","mint","send","from","on","hash","self","items","indexss","handleClickNew"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Web3 from 'web3'\r\nimport './App.css';\r\nimport MemoryToken from '../abis/MemoryToken.json'\r\nimport sha256 from 'crypto-js/sha256'\r\n//import { message, Button, Space } from 'antd';\r\nimport brain from '../brain.png'\r\nconst CARD_ARRAY = [\r\n  {\r\n    name: 'fries',\r\n    img: '/images/fries.png'\r\n  },\r\n  {\r\n    name: 'cheeseburger',\r\n    img: '/images/cheeseburger.png'\r\n  },\r\n  {\r\n    name: 'ice-cream',\r\n    img: '/images/ice-cream.png'\r\n  },\r\n  {\r\n    name: 'pizza',\r\n    img: '/images/pizza.png'\r\n  },\r\n  {\r\n    name: 'milkshake',\r\n    img: '/images/milkshake.png'\r\n  },\r\n  {\r\n    name: 'hotdog',\r\n    img: '/images/hotdog.png'\r\n  },\r\n  {\r\n    name: 'fries',\r\n    img: '/images/fries.png'\r\n  },\r\n  {\r\n    name: 'cheeseburger',\r\n    img: '/images/cheeseburger.png'\r\n  },\r\n  {\r\n    name: 'ice-cream',\r\n    img: '/images/ice-cream.png'\r\n  },\r\n  {\r\n    name: 'pizza',\r\n    img: '/images/pizza.png'\r\n  },\r\n  {\r\n    name: 'milkshake',\r\n    img: '/images/milkshake.png'\r\n  },\r\n  {\r\n    name: 'hotdog',\r\n    img: '/images/hotdog.png'\r\n  }\r\n]\r\nclass App extends Component {\r\n  async componentWillMount() {\r\n    await this.loadWeb3()\r\n    await this.loadBlockchainData()\r\n    this.setState({ cardArray: CARD_ARRAY.sort(() => 0.5 - Math.random()) })\r\n  }\r\n\r\n  async loadWeb3() {\r\n    if (window.ethereum) {\r\n      window.web3 = new Web3(window.ethereum)\r\n      await window.ethereum.enable()\r\n    }\r\n    else if (window.web3) {\r\n      window.web3 = new Web3(window.web3.currentProvider)\r\n    }\r\n    else {\r\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\r\n    }\r\n  }\r\n  async loadBlockchainData() {\r\n    const web3 = window.web3\r\n    const accounts = await web3.eth.getAccounts()\r\n   \r\n    this.setState({ account: accounts[0] })\r\n    const networkId = await web3.eth.net.getId()\r\n    const networkData = MemoryToken.networks[networkId]\r\n    if(networkData) {\r\n      const abi = MemoryToken.abi\r\n      const address = networkData.address\r\n      const token = new web3.eth.Contract(abi, address)\r\n      this.setState({ token })\r\n      const totalSupply = await token.methods.totalSupply().call()\r\n      this.setState({ totalSupply })\r\n      //await token.methods.setNonce1(sha256(2)).call()\r\n      await token.methods.joinGame(1, accounts[0]).call()\r\n      await token.methods.startGame().call()\r\n  \r\n      // Load Tokens\r\n      let balanceOf = await token.methods.balanceOf(accounts[0]).call()\r\n      for (let i = 0; i < balanceOf; i++) {\r\n        let id = await token.methods.tokenOfOwnerByIndex(accounts[0], i).call()\r\n        let tokenURI = await token.methods.tokenURI(id).call()\r\n        this.setState({\r\n          tokenURIs: [...this.state.tokenURIs, tokenURI]\r\n        })\r\n      }\r\n    } else {\r\n      alert('Smart contract not deployed to detected network.')\r\n    }\r\n  }\r\n  chooseImage = (cardId) => {\r\n    console.log(\"haha\")\r\n    cardId = cardId.toString()\r\n    if(this.state.cardsWon.includes(cardId)) {\r\n      return window.location.origin + '/images/white.png'\r\n    }\r\n    else if(this.state.cardsChosenId.includes(cardId)) {\r\n      return CARD_ARRAY[cardId].img\r\n    } else {\r\n      return window.location.origin + '/images/blank.png'\r\n    }\r\n  }\r\n\r\n  flipCard = async (cardId) => {\r\n    let alreadyChosen = this.state.cardsChosen.length\r\n\r\n    this.setState({\r\n      cardsChosen: [...this.state.cardsChosen, this.state.cardArray[cardId].name],\r\n      cardsChosenId: [...this.state.cardsChosenId, cardId]\r\n    })\r\n\r\n    if (alreadyChosen === 1) {\r\n      setTimeout(this.checkForMatch, 100)\r\n    }\r\n  }\r\n  checkForMatch = async () => {\r\n    const optionOneId = this.state.cardsChosenId[0]\r\n    const optionTwoId = this.state.cardsChosenId[1]\r\n\r\n    if(optionOneId == optionTwoId) {\r\n      alert('You have clicked the same image!')\r\n    } else if (this.state.cardsChosen[0] === this.state.cardsChosen[1]) {\r\n      alert('You found a match')\r\n      this.state.token.methods.mint(\r\n         this.state.account,\r\n         window.location.origin + CARD_ARRAY[optionOneId].img.toString()\r\n       )\r\n       .send({ from: this.state.account })\r\n       .on('transactionHash', (hash) => {\r\n         this.setState({\r\n           cardsWon: [...this.state.cardsWon, optionOneId, optionTwoId],\r\n           tokenURIs: [...this.state.tokenURIs, CARD_ARRAY[optionOneId].img]\r\n         })\r\n       })\r\n    } else {\r\n      alert('Sorry, try again')\r\n    }\r\n    this.setState({\r\n      cardsChosen: [],\r\n      cardsChosenId: []\r\n    })\r\n    if (this.state.cardsWon.length === CARD_ARRAY.length) {\r\n      alert('Congratulations! You found them all!')\r\n    }\r\n  }\r\n\r\n  ///////////////////////////////////////////////////////////////////\r\n  defineWinned() {\r\n    const name = this.state.isClick == 1 ? '黑棋胜' : '白棋胜'\r\n    alert(name)\r\n  }\r\n  handleClickNew(index, indexs) {\r\n    let state = this.state.isClickArr.findIndex((n) => n.idx == index && n.idxs == indexs)\r\n    if (state != -1) {\r\n        return\r\n    }\r\n    this.setState({\r\n        data: this.state.data + 1,\r\n        idx: index,\r\n        idxs: indexs,\r\n        isClick: this.state.data % 2 === 0 ? 1 : 2,\r\n        isClickArr: this.state.isClickArr.concat([{\r\n            data: this.state.data + 1,\r\n            idx: index,\r\n            idxs: indexs,\r\n            isClick: this.state.data % 2 === 0 ? 1 : 2\r\n        }])\r\n    }, () => {\r\n        let letArr = this.state.twoArray.map((ele, index1) => {\r\n            let arr = Array(20).fill([])\r\n            let arrr=arr.map((item,row) => {\r\n                arr[this.state.idx] = this.state.isClickArr.filter((eles, index2) => {\r\n                    return index1 == eles.idxs && eles.idx == row\r\n                })\r\n                let arrData = arr[this.state.idx].length > 0 ? arr[this.state.idx][0] : ''\r\n                return arrData\r\n            })\r\n            let arrs = Array(20).fill([])\r\n            arrs[indexs][index] = arrr\r\n            return arrs[indexs][index]\r\n        })\r\n        // (纵坐标，横坐标)[indexs][index]确定一个点的位置\r\n        console.log(letArr) // 按第一行、第二行...第二十行 纵坐标\r\n        console.log(index, 'index') // 横坐标\r\n        console.log(indexs, 'indexs') // 纵坐标\r\n        //列计数\r\n\r\n        this.state.token.methods.playMoveNew(index, indexs).estimateGas({gas: 5000000}, function(error, gasAmount){\r\n          if(gasAmount == 5000000)\r\n              console.log('Method ran out of gas');\r\n      });\r\n        \r\n    })\r\n  }\r\n  handleClick(index, indexs) {\r\n    let state = this.state.isClickArr.findIndex((n) => n.idx == index && n.idxs == indexs)\r\n    if (state != -1) {\r\n        return\r\n    }\r\n    this.setState({\r\n        data: this.state.data + 1,\r\n        idx: index,\r\n        idxs: indexs,\r\n        isClick: this.state.data % 2 === 0 ? 1 : 2,\r\n        isClickArr: this.state.isClickArr.concat([{\r\n            data: this.state.data + 1,\r\n            idx: index,\r\n            idxs: indexs,\r\n            isClick: this.state.data % 2 === 0 ? 1 : 2\r\n        }])\r\n    }, () => {\r\n        let letArr = this.state.twoArray.map((ele, index1) => {\r\n            let arr = Array(20).fill([])\r\n            let arrr=arr.map((item,row) => {\r\n                arr[this.state.idx] = this.state.isClickArr.filter((eles, index2) => {\r\n                    return index1 == eles.idxs && eles.idx == row\r\n                })\r\n                let arrData = arr[this.state.idx].length > 0 ? arr[this.state.idx][0] : ''\r\n                return arrData\r\n            })\r\n            let arrs = Array(20).fill([])\r\n            arrs[indexs][index] = arrr\r\n            return arrs[indexs][index]\r\n        })\r\n        // (纵坐标，横坐标)[indexs][index]确定一个点的位置\r\n        console.log(letArr) // 按第一行、第二行...第二十行 纵坐标\r\n        console.log(index, 'index') // 横坐标\r\n        console.log(indexs, 'indexs') // 纵坐标\r\n        //列计数\r\n        let columnCount = 0;\r\n        // 向上下棋\r\n        for (let i = indexs + 1; i < 20; i++) {\r\n            if (letArr[i][index].isClick == this.state.isClick) {\r\n                columnCount++;\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n        // 向下下棋\r\n        for (let i = indexs - 1; i >= 0; i--) {\r\n            if (letArr[i][index].isClick == this.state.isClick) {\r\n                columnCount++;\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n        if (columnCount >= 4) {\r\n            this.defineWinned()\r\n            columnCount = 0\r\n            return;\r\n        }\r\n        //行计数\r\n        let lineCount = 0;\r\n        // 向左下棋\r\n        for (let i = index + 1; i < 20; i++) {\r\n            if (letArr[indexs][i].isClick == this.state.isClick) {\r\n                lineCount++;\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n        // 向右下棋\r\n        for (let i = index - 1; i >= 0; i--) {\r\n            if (letArr[indexs][i].isClick == this.state.isClick) {\r\n                lineCount++;\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n        if (lineCount >= 4) {\r\n            this.defineWinned()\r\n            lineCount = 0\r\n            return;\r\n        }\r\n        //斜行计数-左斜 \\\r\n        let obliqueLeftCount = 0;\r\n        // 向左上下棋↖\r\n        for (let i = index + 1, j = indexs + 1; i < 20 && j < 20; i++,j++) {\r\n            if (letArr[i][j].isClick == this.state.isClick) {\r\n                obliqueLeftCount++;\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n        // 向左下下棋↘\r\n        for (let i = index - 1, j = indexs - 1; i >= 0 && j >= 0; i--,j--) {\r\n            if (letArr[j][i].isClick == this.state.isClick) {\r\n                obliqueLeftCount++;\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n        if (obliqueLeftCount >= 4) {\r\n            this.defineWinned()\r\n            obliqueLeftCount = 0\r\n            return;\r\n        }\r\n        //斜行计数-右斜 /\r\n        let obliqueRightCount = 0;\r\n        // 向右上下棋↗\r\n        for (let i = indexs + 1, j = index - 1; i < 20 && j >= 0; i++,j--) {\r\n            if (letArr[i][j].isClick == this.state.isClick) {\r\n                obliqueRightCount++;\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n        // 向左右下下棋↙\r\n        for (let i = indexs- 1, j = index + 1; i >= 0 && j < 20; i--,j++) {\r\n            if (letArr[i][j].isClick == this.state.isClick) {\r\n                obliqueRightCount++;\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n        console.log(obliqueRightCount,'obliqueRightCount')\r\n        if (obliqueRightCount >= 4) {\r\n            this.defineWinned()\r\n            obliqueRightCount = 0\r\n            return;\r\n        }\r\n    })\r\n}\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      account: '0x0',\r\n      token: null,\r\n      totalSupply: 0,\r\n      tokenURIs: [],\r\n      cardArray: [],\r\n      cardsChosen: [],\r\n      cardsChosenId: [],\r\n      cardsWon: [],\r\n\r\n      ///////////////////////\r\n      arr: Array(20).fill(null),\r\n      isClick: null,\r\n      data: 0, // 点击黑白点的次数\r\n      idx: 0, // 点击点的的横坐标\r\n      idxs: 0, // 点击点的纵坐标\r\n      isClickArr: [{\r\n                data: null,\r\n                idx: null,\r\n                idxs: null,\r\n                isClick: null\r\n      }], // 存放点击过的点的数组\r\n      twoArray: Array(20).fill([]), // 存放点击过的点的数组\r\n      arrs: []\r\n    \r\n    }\r\n  }\r\n\r\n  render() {\r\n    var self = this;\r\n    return (\r\n      <div className='main'>\r\n        <small className=\"text-muted\"><span id=\"account\">{this.state.account}</span></small>\r\n                {\r\n                    this.state.arr.map((item, index) => {\r\n                        return <div className='main-cell' key={index}>\r\n                            {\r\n                                this.state.arr.map((ele, indexs) => {\r\n                                    return <div className='main-cell-single' key={indexs}>\r\n                                        {/* {\r\n                                            this.state.data != 0 && this.state.isClickArr[this.state.data - 1].isClick == 1 && this.state.isClickArr[this.state.data - 1].idx == index && this.state.isClickArr[this.state.data - 1].idxs == indexs\r\n                                                ? <div className='main-cell-black'></div>\r\n                                                : this.state.data != 0 && this.state.isClickArr[this.state.data - 1].isClick == 2 && this.state.isClickArr[this.state.data - 1].idx == index && this.state.isClickArr[this.state.data - 1].idxs == indexs ? <div className='main-cell-white'></div>\r\n                                                    : ''\r\n                                        } */\r\n                                            this.state.isClickArr.map((items, indexss) => {\r\n                                                return <div key={indexss} className='main-cell-click' onClick={() => self.handleClickNew(index, indexs)}>\r\n                                                    {\r\n                                                        items.isClick == 1 && items.idx == index && items.idxs == indexs\r\n                                                            ? <div className='main-cell-black'></div>\r\n                                                            : items.isClick == 2 && items.idx == index && items.idxs == indexs ? <div className='main-cell-white'></div>\r\n                                                                : ''\r\n                                                    }\r\n                                                </div>\r\n                                            })\r\n                                        }\r\n                                    </div>\r\n                                })\r\n                            }\r\n                        </div>\r\n                    })\r\n                }\r\n            </div>\r\n    \r\n      /*\r\n      <div>\r\n        <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\r\n          <a\r\n            className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\r\n            href=\"http://www.dappuniversity.com/bootcamp\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n          <img src={brain} width=\"30\" height=\"30\" className=\"d-inline-block align-top\" alt=\"\" />\r\n          &nbsp; Memory Tokens\r\n          </a>\r\n          <ul className=\"navbar-nav px-3\">\r\n            <li className=\"nav-item text-nowrap d-none d-sm-none d-sm-block\">\r\n              <small className=\"text-muted\"><span id=\"account\">{this.state.account}</span></small>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n        <div className=\"container-fluid mt-5\">\r\n          <div className=\"row\">\r\n            <main role=\"main\" className=\"col-lg-12 d-flex text-center\">\r\n              <div className=\"content mr-auto ml-auto\">\r\n                <h1 className=\"d-4\">haha</h1>\r\n\r\n                <div className=\"grid mb-4\" >\r\n\r\n                { this.state.cardArray.map((card, key) => {\r\n                    return(\r\n                      <img\r\n                        key={key}\r\n                        src={this.chooseImage(key)}\r\n                        data-id={key}\r\n                        onClick={(event) => {\r\n                          let cardId = event.target.getAttribute('data-id')\r\n                          if(!this.state.cardsWon.includes(cardId.toString())) {\r\n                            this.flipCard(cardId)\r\n                          }\r\n                        }}\r\n                      />\r\n                    )\r\n                  })}\r\n\r\n                </div>\r\n\r\n                <div>\r\n                  <h5>Tokens Collected:<span id=\"result\">&nbsp;{this.state.tokenURIs.length}</span></h5>\r\n                  <div className=\"grid mb-4\" >\r\n\r\n                  { this.state.tokenURIs.map((tokenURI, key) => {\r\n                      return(\r\n                        <img\r\n                          key={key}\r\n                          src={tokenURI}\r\n                        />\r\n                      )\r\n                    })}\r\n\r\n                  </div>\r\n\r\n                </div>\r\n\r\n              </div>\r\n\r\n            </main>\r\n          </div>\r\n        </div>\r\n      </div>*/\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}