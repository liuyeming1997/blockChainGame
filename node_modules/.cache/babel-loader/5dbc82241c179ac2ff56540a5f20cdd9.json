{"ast":null,"code":"import _toConsumableArray from \"E:\\\\masterstudy\\\\2022S1\\\\cycurrency\\\\research\\\\blockchain_game\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"E:\\\\masterstudy\\\\2022S1\\\\cycurrency\\\\research\\\\blockchain_game\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"E:\\\\masterstudy\\\\2022S1\\\\cycurrency\\\\research\\\\blockchain_game\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"E:\\\\masterstudy\\\\2022S1\\\\cycurrency\\\\research\\\\blockchain_game\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"E:\\\\masterstudy\\\\2022S1\\\\cycurrency\\\\research\\\\blockchain_game\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\masterstudy\\\\2022S1\\\\cycurrency\\\\research\\\\blockchain_game\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"E:\\\\masterstudy\\\\2022S1\\\\cycurrency\\\\research\\\\blockchain_game\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"E:\\\\masterstudy\\\\2022S1\\\\cycurrency\\\\research\\\\blockchain_game\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\masterstudy\\\\2022S1\\\\cycurrency\\\\research\\\\blockchain_game\\\\src\\\\components\\\\App.js\";\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\nimport './App.css';\nimport MemoryToken from '../abis/MemoryToken.json';\nimport sha256 from 'crypto-js/sha256';\nimport { v4 as uuidv4 } from \"uuid\"; //import { message, Button, Space } from 'antd';\n\nimport brain from '../brain.png';\nimport { PanelGroup } from 'react-bootstrap';\nvar CARD_ARRAY = [{\n  name: 'fries',\n  img: '/images/fries.png'\n}, {\n  name: 'cheeseburger',\n  img: '/images/cheeseburger.png'\n}, {\n  name: 'ice-cream',\n  img: '/images/ice-cream.png'\n}, {\n  name: 'pizza',\n  img: '/images/pizza.png'\n}, {\n  name: 'milkshake',\n  img: '/images/milkshake.png'\n}, {\n  name: 'hotdog',\n  img: '/images/hotdog.png'\n}, {\n  name: 'fries',\n  img: '/images/fries.png'\n}, {\n  name: 'cheeseburger',\n  img: '/images/cheeseburger.png'\n}, {\n  name: 'ice-cream',\n  img: '/images/ice-cream.png'\n}, {\n  name: 'pizza',\n  img: '/images/pizza.png'\n}, {\n  name: 'milkshake',\n  img: '/images/milkshake.png'\n}, {\n  name: 'hotdog',\n  img: '/images/hotdog.png'\n}];\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.func();\n    }\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context2.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                _context2.next = 7;\n                break;\n\n              case 6:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\n                }\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var web3, accounts, networkId, networkData, abi, address, token;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                web3 = window.web3;\n                _context3.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context3.sent;\n                this.setState({\n                  account: accounts[0]\n                }); //this.setState({ account2: '0xabeFC1ca4EA200a3847fB21B8AB0F4c83B2A5303'})\n\n                _context3.next = 7;\n                return web3.eth.net.getId();\n\n              case 7:\n                networkId = _context3.sent;\n                networkData = MemoryToken.networks[networkId];\n\n                if (!networkData) {\n                  _context3.next = 19;\n                  break;\n                }\n\n                abi = MemoryToken.abi;\n                address = networkData.address; //const address = \"0x08425a1B69d7Bd7De5b857EafAA74466d89284af\"\n\n                _context3.next = 14;\n                return new web3.eth.Contract(abi, address);\n\n              case 14:\n                token = _context3.sent;\n                this.setState({\n                  token: token\n                });\n                this.initData(); //this.updateClickArr()\n\n                /*const totalSupply = await token.methods.totalSupply().call().then(console.log)\r\n                this.setState({ totalSupply })\r\n                //token.methods.playMoveNew().call().then(console.log)\r\n                //await token.methods.setNonce1(sha256(2)).call()\r\n                \r\n                //await token.methods.startGame().call()\r\n                //await token.methods.playMoveNew().call().then(console.log)\r\n                console.log(\"wula\")\r\n                      // Load Tokens\r\n                let balanceOf = await token.methods.balanceOf(accounts[0]).call()\r\n                //console.log(balanceOf)\r\n                for (let i = 0; i < balanceOf; i++) {\r\n                  console.log(\"vvs\")\r\n                  let id = await token.methods.tokenOfOwnerByIndex(accounts[0], i).call()\r\n                  let tokenURI = await token.methods.tokenURI(id).call()\r\n                  this.setState({\r\n                    tokenURIs: [...this.state.tokenURIs, tokenURI]\r\n                  })\r\n                }*/\n\n                _context3.next = 20;\n                break;\n\n              case 19:\n                alert('Smart contract not deployed to detected network.');\n\n              case 20:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }, {\n    key: \"MasterSendMoneyToContract\",\n    ///////////////////////////////////////////////////////////////////\n    value: function MasterSendMoneyToContract() {\n      this.state.token.methods.startGame(this.state.nonce, this.state.account).send({\n        value: 3 * 1e18,\n        from: this.state.account\n      }).on('transactionHash', function (hash) {}).on('confirmation', function (confirmationNumber, receipt) {}).on('receipt', function (receipt) {\n        // receipt 相关例子\n        console.log(receipt);\n      }).on('error', function (error, receipt) {// 如果交易被网络拒绝并带有交易收据，则第二个参数将是交易收据。\n      });\n    }\n  }, {\n    key: \"initDataNew\",\n    value: function initDataNew() {\n      this.setState({\n        isWinner: false\n      });\n    }\n  }, {\n    key: \"JoinGame\",\n    value: function JoinGame() {\n      var _this2 = this;\n\n      if (this.state.nonce != 0) {\n        alert(\"you have already create room, can not join\");\n        return;\n      }\n\n      this.initDataNew();\n      this.state.token.methods.GetRoom().call().then(function (result) {\n        if (result == false) {\n          alert(\"there is no room, can not join\");\n        } else {\n          var id = Math.floor(Math.random() * 100 + 1);\n\n          _this2.state.token.methods.joinGame(id, _this2.state.account).send({\n            value: 3 * 1e18,\n            from: _this2.state.account\n          }).on('transactionHash', function (hash) {\n            _this2.setState({\n              nonce: id\n            });\n\n            alert(\"join room successfully\");\n          }).on('confirmation', function (confirmationNumber, receipt) {}).on('receipt', function (receipt) {\n            console.log(receipt);\n          }).on('error', function (error, receipt) {});\n        }\n      });\n    }\n  }, {\n    key: \"CreateRoom\",\n    value: function CreateRoom() {\n      var _this3 = this;\n\n      this.state.token.methods.GetRoom().call().then(function (result) {\n        if (result == false) {\n          var id = Math.floor(Math.random() * 100 + 1);\n          console.log(\"id\", id);\n\n          _this3.state.token.methods.CreateRoom(id, _this3.state.account).send({\n            from: _this3.state.account\n          }).on('transactionHash', function (hash) {\n            _this3.setState({\n              nonce: id\n            });\n\n            console.log(\"nonce\", _this3.state.nonce);\n\n            _this3.initDataNew();\n\n            alert(\"create room successfully\");\n          });\n        } else {\n          alert(\"already have a room, cant create\");\n        }\n      });\n    }\n  }, {\n    key: \"checkGameOver\",\n    value: function checkGameOver(index, indexs) {\n      this.state.token.methods.checkGameOver(index, indexs).call().then(console.log);\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick(index, indexs) {\n      var _this4 = this;\n\n      var state = this.state.isClickArr.findIndex(function (n) {\n        return n.idx == index && n.idxs == indexs;\n      });\n\n      if (state != -1) {\n        return;\n      }\n\n      this.setState({\n        data: this.state.data + 1,\n        idx: index,\n        idxs: indexs,\n        isClick: this.state.data % 2 === 0 ? 1 : 2,\n        isClickArr: this.state.isClickArr.concat([{\n          data: this.state.data + 1,\n          idx: index,\n          idxs: indexs,\n          isClick: this.state.data % 2 === 0 ? 1 : 2\n        }])\n      }, function () {\n        var letArr = _this4.state.twoArray.map(function (ele, index1) {\n          var arr = Array(20).fill([]);\n          var arrr = arr.map(function (item, row) {\n            arr[_this4.state.idx] = _this4.state.isClickArr.filter(function (eles, index2) {\n              return index1 == eles.idxs && eles.idx == row;\n            });\n            var arrData = arr[_this4.state.idx].length > 0 ? arr[_this4.state.idx][0] : '';\n            return arrData;\n          });\n          var arrs = Array(20).fill([]);\n          arrs[indexs][index] = arrr;\n          return arrs[indexs][index];\n        }); // (纵坐标，横坐标)[indexs][index]确定一个点的位置\n\n\n        console.log(letArr); // 按第一行、第二行...第二十行 纵坐标\n\n        console.log(index, 'index'); // 横坐标\n\n        console.log(indexs, 'indexs'); // 纵坐标\n        //列计数\n\n        var columnCount = 0; // 向上下棋\n\n        for (var i = indexs + 1; i < 20; i++) {\n          if (letArr[i][index].isClick == _this4.state.isClick) {\n            columnCount++;\n          } else {\n            break;\n          }\n        } // 向下下棋\n\n\n        for (var _i = indexs - 1; _i >= 0; _i--) {\n          if (letArr[_i][index].isClick == _this4.state.isClick) {\n            columnCount++;\n          } else {\n            break;\n          }\n        }\n\n        if (columnCount >= 4) {\n          _this4.defineWinned();\n\n          columnCount = 0;\n          return;\n        } //行计数\n\n\n        var lineCount = 0; // 向左下棋\n\n        for (var _i2 = index + 1; _i2 < 20; _i2++) {\n          if (letArr[indexs][_i2].isClick == _this4.state.isClick) {\n            lineCount++;\n          } else {\n            break;\n          }\n        } // 向右下棋\n\n\n        for (var _i3 = index - 1; _i3 >= 0; _i3--) {\n          if (letArr[indexs][_i3].isClick == _this4.state.isClick) {\n            lineCount++;\n          } else {\n            break;\n          }\n        }\n\n        if (lineCount >= 4) {\n          _this4.defineWinned();\n\n          lineCount = 0;\n          return;\n        } //斜行计数-左斜 \\\n\n\n        var obliqueLeftCount = 0; // 向左上下棋↖\n\n        for (var _i4 = index + 1, j = indexs + 1; _i4 < 20 && j < 20; _i4++, j++) {\n          if (letArr[_i4][j].isClick == _this4.state.isClick) {\n            obliqueLeftCount++;\n          } else {\n            break;\n          }\n        } // 向左下下棋↘\n\n\n        for (var _i5 = index - 1, _j = indexs - 1; _i5 >= 0 && _j >= 0; _i5--, _j--) {\n          if (letArr[_j][_i5].isClick == _this4.state.isClick) {\n            obliqueLeftCount++;\n          } else {\n            break;\n          }\n        }\n\n        if (obliqueLeftCount >= 4) {\n          _this4.defineWinned();\n\n          obliqueLeftCount = 0;\n          return;\n        } //斜行计数-右斜 /\n\n\n        var obliqueRightCount = 0; // 向右上下棋↗\n\n        for (var _i6 = indexs + 1, _j2 = index - 1; _i6 < 20 && _j2 >= 0; _i6++, _j2--) {\n          if (letArr[_i6][_j2].isClick == _this4.state.isClick) {\n            obliqueRightCount++;\n          } else {\n            break;\n          }\n        } // 向左右下下棋↙\n\n\n        for (var _i7 = indexs - 1, _j3 = index + 1; _i7 >= 0 && _j3 < 20; _i7--, _j3++) {\n          if (letArr[_i7][_j3].isClick == _this4.state.isClick) {\n            obliqueRightCount++;\n          } else {\n            break;\n          }\n        }\n\n        console.log(obliqueRightCount, 'obliqueRightCount');\n\n        if (obliqueRightCount >= 4) {\n          _this4.defineWinned();\n\n          obliqueRightCount = 0;\n          return;\n        }\n      });\n    }\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.func = function () {\n      setInterval(function () {\n        _this.updateClickArr();\n      }, 5000);\n    };\n\n    _this.chooseImage = function (cardId) {\n      cardId = cardId.toString();\n\n      if (_this.state.cardsWon.includes(cardId)) {\n        return window.location.origin + '/images/white.png';\n      } else if (_this.state.cardsChosenId.includes(cardId)) {\n        return CARD_ARRAY[cardId].img;\n      } else {\n        return window.location.origin + '/images/blank.png';\n      }\n    };\n\n    _this.flipCard = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(cardId) {\n        var alreadyChosen;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                alreadyChosen = _this.state.cardsChosen.length;\n\n                _this.setState({\n                  cardsChosen: [].concat(_toConsumableArray(_this.state.cardsChosen), [_this.state.cardArray[cardId].name]),\n                  cardsChosenId: [].concat(_toConsumableArray(_this.state.cardsChosenId), [cardId])\n                });\n\n                if (alreadyChosen === 1) {\n                  setTimeout(_this.checkForMatch, 100);\n                }\n\n              case 3:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.checkForMatch = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n      var optionOneId, optionTwoId;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              optionOneId = _this.state.cardsChosenId[0];\n              optionTwoId = _this.state.cardsChosenId[1];\n\n              if (optionOneId == optionTwoId) {\n                alert('You have clicked the same image!');\n              } else if (_this.state.cardsChosen[0] === _this.state.cardsChosen[1]) {\n                alert('You found a match');\n\n                _this.state.token.methods.mint(_this.state.account, window.location.origin + CARD_ARRAY[optionOneId].img.toString()).send({\n                  from: _this.state.account\n                }).on('transactionHash', function (hash) {\n                  _this.setState({\n                    cardsWon: [].concat(_toConsumableArray(_this.state.cardsWon), [optionOneId, optionTwoId]),\n                    tokenURIs: [].concat(_toConsumableArray(_this.state.tokenURIs), [CARD_ARRAY[optionOneId].img])\n                  });\n                });\n              } else {\n                alert('Sorry, try again');\n              }\n\n              _this.setState({\n                cardsChosen: [],\n                cardsChosenId: []\n              });\n\n              if (_this.state.cardsWon.length === CARD_ARRAY.length) {\n                alert('Congratulations! You found them all!');\n              }\n\n            case 5:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    _this.defineWinned = function () {\n      // const name = this.state.isClick == 1 ? '黑棋胜' : '白棋胜'\n      //  // this.state.token.methods.defineWinned(this.state.isClick - 1).\n      //  //  send({ from: this.state.account }).then(console.log)\n      //  alert(name)\n      console.log(\"winner1: \", _this.state.isWinner);\n\n      _this.setState({\n        isWinner: true\n      });\n\n      console.log(\"winner2: \", _this.state.isWinner);\n      return true;\n      /*this.state.token.methods.defineWinned(this.state.isClick - 1).send({value:2, from: this.state.account})\r\n      .on('transactionHash', function(hash){ \r\n          this.setState({isStart: false})\r\n       })\r\n       .on('confirmation', function(confirmationNumber, receipt){  })\r\n       .on('receipt', function(receipt){\r\n       console.log(receipt);\r\n      })\r\n      .on('error', function(error, receipt) { \r\n      });*/\n    };\n\n    _this.initData = function () {\n      _this.state.token.methods.getIndex().call().then(function (result) {\n        if (result[0].length != _this.state.isClickArr.length - 1) {\n          console.log(\"init res.length\", result[0].length);\n          console.log(\"init local length\", _this.state.isClickArr.length);\n\n          _this.setState({\n            isClickArr: []\n          });\n\n          result[0].map(function (ele, index1) {\n            _this.setState({\n              data: _this.state.data + 1,\n              isClick: _this.state.data % 2 === 0 ? 1 : 2,\n              isClickArr: _this.state.isClickArr.concat([{\n                data: _this.state.data + 1,\n                idx: result[0][index1],\n                idxs: result[1][index1],\n                isClick: result[2][index1]\n              }])\n            });\n          });\n\n          if (_this.state.account == result[3]) {\n            _this.setState({\n              isMyTurn: true\n            });\n          } else {\n            _this.setState({\n              isMyTurn: false\n            });\n          }\n        }\n      });\n    };\n\n    _this.updateClickArr = function () {\n      if (_this.state.isStart == false) {\n        _this.state.token.methods.getStart().call().then(function (result) {\n          if (result == true) {\n            console.log(\"kaishi\");\n            _this.state.isStart = true;\n\n            _this.state.token.methods.getPlayer().call().then(function (result) {\n              // console.log(result)\n              // console.log(this.state.account)\n              if (result[0] == _this.state.account) {\n                _this.state.isMyTurn = true;\n\n                _this.setState({\n                  isClick: result[1] + 1\n                });\n              } else {\n                _this.state.isMyTurn = false;\n\n                _this.setState({\n                  isClick: result[1] ^ 1 + 1\n                });\n              }\n\n              if (result[2] == _this.state.account) {\n                _this.setState({\n                  isClick: 1\n                });\n\n                alert(\"Game Begin!Your first move. \");\n              } else {\n                _this.setState({\n                  isClick: 2\n                });\n\n                alert(\"Game Begin!Your backhand move.\");\n              }\n\n              console.log(_this.state.isClick);\n              console.log(\"now turn state\", _this.state.isMyTurn);\n            });\n\n            if (_this.state.isMyTurn == true) {\n              _this.state.token.methods.getIndex().call().then(function (result) {\n                _this.setState({\n                  isClickArr: [{\n                    idx: null,\n                    idxs: null,\n                    isClick: null\n                  }]\n                });\n\n                console.log(\"result1\", result);\n\n                if (result[0].length != 0) {\n                  result[0].map(function (ele, index1) {\n                    _this.setState({\n                      //data: this.state.data + 1,\n                      isClickArr: _this.state.isClickArr.concat([{\n                        idx: result[0][index1],\n                        idxs: result[1][index1],\n                        isClick: result[2][index1]\n                      }])\n                    });\n                  });\n                }\n\n                console.log(\"end\");\n              });\n\n              console.log(\"end1\");\n            }\n          }\n        });\n      }\n\n      if (_this.state.doubleTurn == false) {\n        _this.state.token.methods.getPlayer().call().then(function (result) {\n          // console.log(\"update res.length\", result[0].length)\n          console.log(result); // console.log(\"update local length\", this.state.isClickArr.length)\n\n          if (result[0] == _this.state.account) {\n            _this.state.token.methods.getWinner().call().then(function (result) {\n              if (result[0] == true) {\n                if (_this.state.account != result[1]) {\n                  alert(\"sorry! you lose\");\n\n                  _this.setState({\n                    isStart: false\n                  });\n                }\n              }\n            });\n\n            alert(\"到你了\");\n\n            _this.state.token.methods.getIndex().call().then(function (result) {\n              console.log(\"res.length\", result[0].length);\n              console.log(\"local length\", _this.state.isClickArr.length);\n\n              _this.setState({\n                isClickArr: [{\n                  idx: null,\n                  idxs: null,\n                  isClick: null\n                }]\n              });\n\n              result[0].map(function (ele, index1) {\n                _this.setState({\n                  //data: this.state.data + 1,\n                  isClickArr: _this.state.isClickArr.concat([{\n                    idx: result[0][index1],\n                    idxs: result[1][index1],\n                    isClick: result[2][index1]\n                  }])\n                });\n              });\n            });\n\n            _this.state.isMyTurn = true;\n            _this.state.doubleTurn = true;\n          }\n        });\n      }\n\n      if (_this.state.isMyTurn == false) {\n        _this.state.doubleTurn = false;\n      }\n    };\n\n    _this.handleClickNew = function (index, indexs) {\n      if (_this.state.isStart == false) {\n        alert(\"比赛还没有开始\");\n        return;\n      }\n\n      if (_this.state.isMyTurn == false) {\n        alert(\"这不是你的回合\");\n        return;\n      }\n\n      if (_this.state.isButton == false) {\n        alert(\"你必须处理完这次交易\");\n        return;\n      }\n\n      _this.state.isButton = false;\n\n      var state = _this.state.isClickArr.findIndex(function (n) {\n        return n.idx == index && n.idxs == indexs;\n      });\n\n      if (state != -1) {\n        return;\n      }\n\n      _this.setState({\n        idx: index,\n        idxs: indexs,\n        isClickArr: _this.state.isClickArr.concat([{\n          data: 0,\n          idx: index,\n          idxs: indexs,\n          isClick: _this.state.isClick\n        }])\n      }, function () {\n        console.log(\"index\", index);\n        console.log(\"indexs\", indexs);\n        console.log(\"state\", _this.state.isClick);\n\n        var flagWinner = _this.checkForWin(index, indexs);\n\n        _this.state.token.methods.playMove(index, indexs, _this.state.isClick, flagWinner).send({\n          from: _this.state.account\n        }).on('transactionHash', function (hash) {\n          _this.setState({\n            isMyTurn: false,\n            isButton: true\n          });\n\n          if (_this.state.isWinner == true) {\n            alert(\"Congratulations! You win.\");\n          }\n        }).on('confirmation', function (confirmationNumber, receipt) {}).on('receipt', function (receipt) {});\n      });\n    };\n\n    _this.checkForWin = function (index, indexs) {\n      var winlen = 0;\n\n      var letArr = _this.state.twoArray.map(function (ele, index1) {\n        var arr = Array(20).fill([]);\n        var arrr = arr.map(function (item, row) {\n          arr[_this.state.idx] = _this.state.isClickArr.filter(function (eles, index2) {\n            return index1 == eles.idxs && eles.idx == row;\n          });\n          var arrData = arr[_this.state.idx].length > 0 ? arr[_this.state.idx][0] : '';\n          return arrData;\n        });\n        var arrs = Array(20).fill([]);\n        arrs[indexs][index] = arrr;\n        return arrs[indexs][index];\n      }); // (纵坐标，横坐标)[indexs][index]确定一个点的位置\n\n\n      console.log(letArr); // 按第一行、第二行...第二十行 纵坐标\n\n      console.log(index, 'index'); // 横坐标\n\n      console.log(indexs, 'indexs'); // 纵坐标\n      //列计数\n\n      var columnCount = 0; // 向上下棋\n\n      for (var i = indexs + 1; i < 20; i++) {\n        if (letArr[i][index].isClick == _this.state.isClick) {\n          columnCount++;\n        } else {\n          break;\n        }\n      } // 向下下棋\n\n\n      for (var _i8 = indexs - 1; _i8 >= 0; _i8--) {\n        if (letArr[_i8][index].isClick == _this.state.isClick) {\n          columnCount++;\n        } else {\n          break;\n        }\n      }\n\n      console.log(\"isClick\", _this.state.isClick);\n      console.log(\"columnCount \", columnCount);\n\n      if (columnCount >= winlen) {\n        return _this.defineWinned();\n        columnCount = 0;\n        return;\n      } //行计数\n\n\n      var lineCount = 0; // 向左下棋\n\n      for (var _i9 = index + 1; _i9 < 20; _i9++) {\n        if (letArr[indexs][_i9].isClick == _this.state.isClick) {\n          lineCount++;\n        } else {\n          break;\n        }\n      } // 向右下棋\n\n\n      for (var _i10 = index - 1; _i10 >= 0; _i10--) {\n        if (letArr[indexs][_i10].isClick == _this.state.isClick) {\n          lineCount++;\n        } else {\n          break;\n        }\n      }\n\n      if (lineCount >= winlen) {\n        return _this.defineWinned();\n        lineCount = 0;\n        return;\n      } //斜行计数-左斜 \\\n\n\n      var obliqueLeftCount = 0; // 向左上下棋↖\n\n      for (var _i11 = index + 1, j = indexs + 1; _i11 < 20 && j < 20; _i11++, j++) {\n        if (letArr[_i11][j].isClick == _this.state.isClick) {\n          obliqueLeftCount++;\n        } else {\n          break;\n        }\n      } // 向左下下棋↘\n\n\n      for (var _i12 = index - 1, _j4 = indexs - 1; _i12 >= 0 && _j4 >= 0; _i12--, _j4--) {\n        if (letArr[_j4][_i12].isClick == _this.state.isClick) {\n          obliqueLeftCount++;\n        } else {\n          break;\n        }\n      }\n\n      if (obliqueLeftCount >= winlen) {\n        obliqueLeftCount = 0;\n        return _this.defineWinned();\n      } //斜行计数-右斜 /\n\n\n      var obliqueRightCount = 0; // 向右上下棋↗\n\n      for (var _i13 = indexs + 1, _j5 = index - 1; _i13 < 20 && _j5 >= 0; _i13++, _j5--) {\n        if (letArr[_i13][_j5].isClick == _this.state.isClick) {\n          obliqueRightCount++;\n        } else {\n          break;\n        }\n      } // 向左右下下棋↙\n\n\n      for (var _i14 = indexs - 1, _j6 = index + 1; _i14 >= 0 && _j6 < 20; _i14--, _j6++) {\n        if (letArr[_i14][_j6].isClick == _this.state.isClick) {\n          obliqueRightCount++;\n        } else {\n          break;\n        }\n      }\n\n      if (obliqueRightCount >= winlen) {\n        return _this.defineWinned();\n        obliqueRightCount = 0;\n        return;\n      }\n    };\n\n    _this.state = {\n      account: '0x0',\n      account2: '0x0',\n      token: null,\n      totalSupply: 0,\n      tokenURIs: [],\n      cardArray: [],\n      cardsChosen: [],\n      cardsChosenId: [],\n      cardsWon: [],\n      ///////////////////////\n      arr: Array(20).fill(null),\n      isClick: null,\n      idx: 0,\n      // 点击点的的横坐标\n      idxs: 0,\n      // 点击点的纵坐标\n      isClickArr: [{\n        idx: null,\n        idxs: null,\n        isClick: null\n      }],\n      // 存放点击过的点的数组\n      twoArray: Array(20).fill([]),\n      // 存放点击过的点的数组\n      arrs: [],\n      isMyTurn: true,\n      isStart: false,\n      isButton: true,\n      isWinner: false,\n      doubleTurn: true,\n      nonce: 0\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var self = this; //this.updateClickArr();\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"main\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 733,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"nav\", {\n        className: \"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 734,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        className: \"navbar-brand col-sm-3 col-md-2 mr-0\" //href=\"http://www.dappuniversity.com/bootcamp\"\n        ,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 735,\n          columnNumber: 11\n        }\n      }, \"\\xA0 GoBang\"), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        onClick: function onClick() {\n          return self.MasterSendMoneyToContract();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 743,\n          columnNumber: 11\n        }\n      }, \" start game \"), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        onClick: function onClick() {\n          return self.JoinGame();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 744,\n          columnNumber: 11\n        }\n      }, \" join game \"), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        onClick: function onClick() {\n          return self.CreateRoom();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 745,\n          columnNumber: 11\n        }\n      }, \" create room \"), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"navbar-nav px-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 746,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        className: \"nav-item text-nowrap d-none d-sm-none d-sm-block\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 747,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"small\", {\n        className: \"text-muted\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 748,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        id: \"account\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 748,\n          columnNumber: 45\n        }\n      }, this.state.account))))), this.state.arr.map(function (item, index) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"main-cell\",\n          key: index,\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 754,\n            columnNumber: 32\n          }\n        }, _this5.state.arr.map(function (ele, indexs) {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            className: \"main-cell-single\",\n            key: indexs,\n            __self: _this5,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 757,\n              columnNumber: 44\n            }\n          }, _this5.state.isClickArr.map(function (items, indexss) {\n            return /*#__PURE__*/React.createElement(\"div\", {\n              key: indexss,\n              className: \"main-cell-click\",\n              onClick: function onClick() {\n                return self.handleClickNew(index, indexs);\n              },\n              __self: _this5,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 760,\n                columnNumber: 56\n              }\n            }, items.isClick == 1 && items.idx == index && items.idxs == indexs ? /*#__PURE__*/React.createElement(\"div\", {\n              className: \"main-cell-black\",\n              __self: _this5,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 763,\n                columnNumber: 63\n              }\n            }) : items.isClick == 2 && items.idx == index && items.idxs == indexs ? /*#__PURE__*/React.createElement(\"div\", {\n              className: \"main-cell-white\",\n              __self: _this5,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 764,\n                columnNumber: 130\n              }\n            }) : '');\n          }));\n        }));\n      }))\n      /*\r\n      <div>\r\n        <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\r\n          <a\r\n            className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\r\n            href=\"http://www.dappuniversity.com/bootcamp\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n          <img src={brain} width=\"30\" height=\"30\" className=\"d-inline-block align-top\" alt=\"\" />\r\n          &nbsp; Memory Tokens\r\n          </a>\r\n          <ul className=\"navbar-nav px-3\">\r\n            <li className=\"nav-item text-nowrap d-none d-sm-none d-sm-block\">\r\n              <small className=\"text-muted\"><span id=\"account\">{this.state.account}</span></small>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n        <div className=\"container-fluid mt-5\">\r\n          <div className=\"row\">\r\n            <main role=\"main\" className=\"col-lg-12 d-flex text-center\">\r\n              <div className=\"content mr-auto ml-auto\">\r\n                <h1 className=\"d-4\">haha</h1>\r\n                  <div className=\"grid mb-4\" >\r\n                  { this.state.cardArray.map((card, key) => {\r\n                    return(\r\n                      <img\r\n                        key={key}\r\n                        src={this.chooseImage(key)}\r\n                        data-id={key}\r\n                        onClick={(event) => {\r\n                          let cardId = event.target.getAttribute('data-id')\r\n                          if(!this.state.cardsWon.includes(cardId.toString())) {\r\n                            this.flipCard(cardId)\r\n                          }\r\n                        }}\r\n                      />\r\n                    )\r\n                  })}\r\n                  </div>\r\n                  <div>\r\n                  <h5>Tokens Collected:<span id=\"result\">&nbsp;{this.state.tokenURIs.length}</span></h5>\r\n                  <div className=\"grid mb-4\" >\r\n                    { this.state.tokenURIs.map((tokenURI, key) => {\r\n                      return(\r\n                        <img\r\n                          key={key}\r\n                          src={tokenURI}\r\n                        />\r\n                      )\r\n                    })}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </main>\r\n          </div>\r\n        </div>\r\n      </div>*/\n      ;\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["E:/masterstudy/2022S1/cycurrency/research/blockchain_game/src/components/App.js"],"names":["React","Component","Web3","MemoryToken","sha256","v4","uuidv4","brain","PanelGroup","CARD_ARRAY","name","img","App","loadWeb3","loadBlockchainData","func","window","ethereum","web3","enable","currentProvider","alert","eth","getAccounts","accounts","setState","account","net","getId","networkId","networkData","networks","abi","address","Contract","token","initData","state","methods","startGame","nonce","send","value","from","on","hash","confirmationNumber","receipt","console","log","error","isWinner","initDataNew","GetRoom","call","then","result","id","Math","floor","random","joinGame","CreateRoom","index","indexs","checkGameOver","isClickArr","findIndex","n","idx","idxs","data","isClick","concat","letArr","twoArray","map","ele","index1","arr","Array","fill","arrr","item","row","filter","eles","index2","arrData","length","arrs","columnCount","i","defineWinned","lineCount","obliqueLeftCount","j","obliqueRightCount","props","setInterval","updateClickArr","chooseImage","cardId","toString","cardsWon","includes","location","origin","cardsChosenId","flipCard","alreadyChosen","cardsChosen","cardArray","setTimeout","checkForMatch","optionOneId","optionTwoId","mint","tokenURIs","getIndex","isMyTurn","isStart","getStart","getPlayer","doubleTurn","getWinner","handleClickNew","isButton","flagWinner","checkForWin","playMove","winlen","account2","totalSupply","self","MasterSendMoneyToContract","JoinGame","items","indexss"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Web3 from 'web3'\r\nimport './App.css';\r\nimport MemoryToken from '../abis/MemoryToken.json'\r\nimport sha256 from 'crypto-js/sha256'\r\nimport { v4 as uuidv4 } from \"uuid\"\r\n//import { message, Button, Space } from 'antd';\r\nimport brain from '../brain.png'\r\nimport { PanelGroup } from 'react-bootstrap';\r\nconst CARD_ARRAY = [\r\n  {\r\n    name: 'fries',\r\n    img: '/images/fries.png'\r\n  },\r\n  {\r\n    name: 'cheeseburger',\r\n    img: '/images/cheeseburger.png'\r\n  },\r\n  {\r\n    name: 'ice-cream',\r\n    img: '/images/ice-cream.png'\r\n  },\r\n  {\r\n    name: 'pizza',\r\n    img: '/images/pizza.png'\r\n  },\r\n  {\r\n    name: 'milkshake',\r\n    img: '/images/milkshake.png'\r\n  },\r\n  {\r\n    name: 'hotdog',\r\n    img: '/images/hotdog.png'\r\n  },\r\n  {\r\n    name: 'fries',\r\n    img: '/images/fries.png'\r\n  },\r\n  {\r\n    name: 'cheeseburger',\r\n    img: '/images/cheeseburger.png'\r\n  },\r\n  {\r\n    name: 'ice-cream',\r\n    img: '/images/ice-cream.png'\r\n  },\r\n  {\r\n    name: 'pizza',\r\n    img: '/images/pizza.png'\r\n  },\r\n  {\r\n    name: 'milkshake',\r\n    img: '/images/milkshake.png'\r\n  },\r\n  {\r\n    name: 'hotdog',\r\n    img: '/images/hotdog.png'\r\n  }\r\n]\r\nclass App extends Component {\r\n  async componentWillMount() {\r\n    await this.loadWeb3()\r\n    await this.loadBlockchainData()\r\n  }\r\n  componentDidMount() {\r\n    this.func();\r\n  }\r\n  async loadWeb3() {\r\n    if (window.ethereum) {\r\n      window.web3 = new Web3(window.ethereum)\r\n      await window.ethereum.enable()\r\n    }\r\n    else if (window.web3) {\r\n      window.web3 = new Web3(window.web3.currentProvider)\r\n    }\r\n    else {\r\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\r\n    }\r\n  }\r\n  func=() => {\r\n    setInterval(() => {\r\n      this.updateClickArr()\r\n    }, 5000);\r\n  }\r\n  async loadBlockchainData() {\r\n    const web3 = window.web3\r\n    const accounts = await web3.eth.getAccounts()\r\n   \r\n    this.setState({account: accounts[0]})\r\n    //this.setState({ account2: '0xabeFC1ca4EA200a3847fB21B8AB0F4c83B2A5303'})\r\n    const networkId = await web3.eth.net.getId()\r\n    const networkData = MemoryToken.networks[networkId]\r\n    if(networkData) {\r\n      const abi = MemoryToken.abi\r\n      const address = networkData.address\r\n      //const address = \"0x08425a1B69d7Bd7De5b857EafAA74466d89284af\"\r\n      const token = await new web3.eth.Contract(abi, address)\r\n      this.setState({ token })\r\n      this.initData();\r\n      //this.updateClickArr()\r\n      /*const totalSupply = await token.methods.totalSupply().call().then(console.log)\r\n      this.setState({ totalSupply })\r\n      //token.methods.playMoveNew().call().then(console.log)\r\n      //await token.methods.setNonce1(sha256(2)).call()\r\n      \r\n      //await token.methods.startGame().call()\r\n      //await token.methods.playMoveNew().call().then(console.log)\r\n      console.log(\"wula\")\r\n    \r\n      // Load Tokens\r\n      let balanceOf = await token.methods.balanceOf(accounts[0]).call()\r\n      //console.log(balanceOf)\r\n      for (let i = 0; i < balanceOf; i++) {\r\n        console.log(\"vvs\")\r\n        let id = await token.methods.tokenOfOwnerByIndex(accounts[0], i).call()\r\n        let tokenURI = await token.methods.tokenURI(id).call()\r\n        this.setState({\r\n          tokenURIs: [...this.state.tokenURIs, tokenURI]\r\n        })\r\n      }*/\r\n    } else {\r\n      alert('Smart contract not deployed to detected network.')\r\n    }\r\n  }\r\n  chooseImage = (cardId) => {\r\n    cardId = cardId.toString()\r\n    if(this.state.cardsWon.includes(cardId)) {\r\n      return window.location.origin + '/images/white.png'\r\n    }\r\n    else if(this.state.cardsChosenId.includes(cardId)) {\r\n      return CARD_ARRAY[cardId].img\r\n    } else {\r\n      return window.location.origin + '/images/blank.png'\r\n    }\r\n  }\r\n\r\n  flipCard = async (cardId) => {\r\n    let alreadyChosen = this.state.cardsChosen.length\r\n\r\n    this.setState({\r\n      cardsChosen: [...this.state.cardsChosen, this.state.cardArray[cardId].name],\r\n      cardsChosenId: [...this.state.cardsChosenId, cardId]\r\n    })\r\n\r\n    if (alreadyChosen === 1) {\r\n      setTimeout(this.checkForMatch, 100)\r\n    }\r\n  }\r\n  checkForMatch = async () => {\r\n    const optionOneId = this.state.cardsChosenId[0]\r\n    const optionTwoId = this.state.cardsChosenId[1]\r\n\r\n    if(optionOneId == optionTwoId) {\r\n      alert('You have clicked the same image!')\r\n    } else if (this.state.cardsChosen[0] === this.state.cardsChosen[1]) {\r\n      alert('You found a match')\r\n      this.state.token.methods.mint(\r\n         this.state.account,\r\n         window.location.origin + CARD_ARRAY[optionOneId].img.toString()\r\n       )\r\n       .send({ from: this.state.account })\r\n       .on('transactionHash', (hash) => {\r\n         this.setState({\r\n           cardsWon: [...this.state.cardsWon, optionOneId, optionTwoId],\r\n           tokenURIs: [...this.state.tokenURIs, CARD_ARRAY[optionOneId].img]\r\n         })\r\n       })\r\n    } else {\r\n      alert('Sorry, try again')\r\n    }\r\n    this.setState({\r\n      cardsChosen: [],\r\n      cardsChosenId: []\r\n    })\r\n    if (this.state.cardsWon.length === CARD_ARRAY.length) {\r\n      alert('Congratulations! You found them all!')\r\n    }\r\n  }\r\n\r\n  ///////////////////////////////////////////////////////////////////\r\n  MasterSendMoneyToContract() {\r\n    this.state.token.methods.startGame(this.state.nonce, this.state.account)\r\n    .send({value:3*1e18, from: this.state.account})\r\n        .on('transactionHash', function(hash){  })\r\n        .on('confirmation', function(confirmationNumber, receipt){  })\r\n        .on('receipt', function(receipt){\r\n          // receipt 相关例子\r\n          console.log(receipt);\r\n      })\r\n        .on('error', function(error, receipt) { // 如果交易被网络拒绝并带有交易收据，则第二个参数将是交易收据。\r\n  });\r\n  }\r\n  initDataNew() {\r\n    this.setState({\r\n      isWinner:false\r\n    })\r\n  }\r\n  JoinGame() {\r\n    if(this.state.nonce != 0) {\r\n      alert(\"you have already create room, can not join\")\r\n      return\r\n    }\r\n    this.initDataNew()\r\n    this.state.token.methods.GetRoom().call().then((result) => {\r\n      if(result == false) {\r\n        alert(\"there is no room, can not join\")\r\n      } else {\r\n        const id = Math.floor((Math.random()*100)+1);\r\n        this.state.token.methods.joinGame(id, this.state.account).send({value:3*1e18, from: this.state.account})\r\n        .on('transactionHash', (hash) => {\r\n          this.setState({nonce: id})\r\n          alert(\"join room successfully\")\r\n          })\r\n        .on('confirmation', function(confirmationNumber, receipt){  })\r\n        .on('receipt', function(receipt){\r\n            console.log(receipt);\r\n        })\r\n        .on('error', function(error, receipt) { \r\n        });\r\n      }\r\n    })\r\n    \r\n  }\r\n  CreateRoom() {\r\n    this.state.token.methods.GetRoom().call().then((result) => {\r\n      if(result == false) {\r\n        const id = Math.floor((Math.random()*100)+1); \r\n        console.log(\"id\", id)\r\n     \r\n        this.state.token.methods.CreateRoom(id, this.state.account).send({from: this.state.account})\r\n        .on('transactionHash', (hash) => {\r\n        this.setState({nonce: id}) \r\n        console.log(\"nonce\", this.state.nonce)\r\n        this.initDataNew()\r\n        alert(\"create room successfully\") })\r\n        \r\n      } else {\r\n        alert(\"already have a room, cant create\")\r\n      }\r\n    })\r\n    \r\n  }\r\n  defineWinned = () => {\r\n    // const name = this.state.isClick == 1 ? '黑棋胜' : '白棋胜'\r\n    //  // this.state.token.methods.defineWinned(this.state.isClick - 1).\r\n    //  //  send({ from: this.state.account }).then(console.log)\r\n    //  alert(name)\r\n     console.log(\"winner1: \", this.state.isWinner)\r\n     this.setState({isWinner: true})\r\n     console.log(\"winner2: \", this.state.isWinner)\r\n     return true;\r\n      /*this.state.token.methods.defineWinned(this.state.isClick - 1).send({value:2, from: this.state.account})\r\n      .on('transactionHash', function(hash){ \r\n          this.setState({isStart: false})\r\n       })\r\n       .on('confirmation', function(confirmationNumber, receipt){  })\r\n       .on('receipt', function(receipt){\r\n       console.log(receipt);\r\n   })\r\n   .on('error', function(error, receipt) { \r\n   });*/\r\n  \r\n    \r\n  }\r\n\r\n  checkGameOver(index, indexs) {\r\n      this.state.token.methods.checkGameOver(index, indexs).call().then(console.log)\r\n  }\r\n  initData = () => {\r\n    this.state.token.methods.getIndex().call().then((result) => {\r\n      if(result[0].length != this.state.isClickArr.length - 1) {\r\n        console.log(\"init res.length\", result[0].length)\r\n        console.log(\"init local length\", this.state.isClickArr.length)\r\n        this.setState({isClickArr:[]})\r\n          result[0].map((ele, index1) => {\r\n            this.setState({\r\n              data: this.state.data + 1,\r\n              isClick: this.state.data % 2 === 0 ? 1 : 2,\r\n              isClickArr: this.state.isClickArr.concat([{\r\n                  data: this.state.data + 1,\r\n                  idx: result[0][index1],\r\n                  idxs: result[1][index1],\r\n                  isClick: result[2][index1]\r\n              }])\r\n          })\r\n        })\r\n        if(this.state.account == result[3]) {\r\n          this.setState({isMyTurn: true})\r\n        } else {\r\n          this.setState({isMyTurn: false})\r\n        }\r\n      }\r\n     \r\n  })\r\n  }\r\n  updateClickArr= ()=> {\r\n     if(this.state.isStart == false) {\r\n      this.state.token.methods.getStart().call().then((result) => {\r\n        if(result == true) {\r\n          console.log(\"kaishi\")\r\n          this.state.isStart = true;\r\n          this.state.token.methods.getPlayer().call().then((result) => {\r\n            // console.log(result)\r\n            // console.log(this.state.account)\r\n            if(result[0] == this.state.account) {\r\n              this.state.isMyTurn = true;\r\n              this.setState({isClick: result[1] + 1})\r\n            } else {\r\n              this.state.isMyTurn = false;\r\n              this.setState({isClick: result[1]^1 + 1})\r\n            }\r\n\r\n            if(result[2] == this.state.account) {\r\n              this.setState({isClick: 1})\r\n              alert(\"Game Begin!Your first move. \")\r\n            } else {\r\n              this.setState({isClick: 2})\r\n              alert(\"Game Begin!Your backhand move.\")\r\n            }\r\n            console.log(this.state.isClick)\r\n            console.log(\"now turn state\", this.state.isMyTurn)\r\n          })\r\n\r\n          if(this.state.isMyTurn == true) {\r\n            this.state.token.methods.getIndex().call().then((result) => {\r\n              this.setState({ isClickArr: [{\r\n                idx: null,\r\n                idxs: null,\r\n                isClick: null\r\n                }]})\r\n              console.log(\"result1\", result)\r\n              if(result[0].length != 0) {\r\n                result[0].map((ele, index1) => {\r\n                  this.setState({\r\n                    //data: this.state.data + 1,\r\n                    isClickArr: this.state.isClickArr.concat([{\r\n                        idx: result[0][index1],\r\n                        idxs: result[1][index1],\r\n                        isClick: result[2][index1]\r\n                    }])\r\n                })\r\n              })\r\n              }\r\n              console.log(\"end\")\r\n          })\r\n          console.log(\"end1\")\r\n          }\r\n        }\r\n      })\r\n      \r\n     }\r\n    if(this.state.doubleTurn == false) {\r\n      this.state.token.methods.getPlayer().call().then((result) => {\r\n        // console.log(\"update res.length\", result[0].length)\r\n        console.log(result)\r\n        // console.log(\"update local length\", this.state.isClickArr.length)\r\n        if(result[0] == this.state.account) {\r\n          this.state.token.methods.getWinner().call().then((result) => {\r\n              if(result[0] == true) {\r\n                if(this.state.account != result[1]) {\r\n                  alert(\"sorry! you lose\")\r\n                  this.setState({isStart: false})\r\n                }\r\n              }\r\n          })\r\n          alert(\"到你了\")\r\n          this.state.token.methods.getIndex().call().then((result) => {\r\n            console.log(\"res.length\", result[0].length)\r\n            console.log(\"local length\", this.state.isClickArr.length)\r\n            this.setState({ isClickArr: [{\r\n              idx: null,\r\n              idxs: null,\r\n              isClick: null\r\n              }]})\r\n            result[0].map((ele, index1) => {\r\n              this.setState({\r\n                //data: this.state.data + 1,\r\n                isClickArr: this.state.isClickArr.concat([{\r\n                    idx: result[0][index1],\r\n                    idxs: result[1][index1],\r\n                    isClick: result[2][index1]\r\n                }])\r\n            })\r\n          })\r\n         \r\n      })\r\n      this.state.isMyTurn = true;\r\n      this.state.doubleTurn = true;\r\n        } \r\n      })\r\n      \r\n    }\r\n    if(this.state.isMyTurn == false) {\r\n      this.state.doubleTurn = false;\r\n    }\r\n    \r\n  }\r\n  handleClickNew = (index, indexs)=> {\r\n    if(this.state.isStart == false) {\r\n      alert(\"比赛还没有开始\")\r\n      return\r\n   }\r\n   if(this.state.isMyTurn == false) {\r\n    alert(\"这不是你的回合\")\r\n    return\r\n    }\r\n    if(this.state.isButton == false) {\r\n      alert(\"你必须处理完这次交易\")\r\n      return\r\n    }\r\n    this.state.isButton = false;\r\n    let state = this.state.isClickArr.findIndex((n) => n.idx == index && n.idxs == indexs)\r\n    if (state != -1) {\r\n        return\r\n    }\r\n    this.setState({\r\n        idx: index,\r\n        idxs: indexs,\r\n        isClickArr: this.state.isClickArr.concat([{\r\n            data: 0,\r\n            idx: index,\r\n            idxs: indexs,\r\n            isClick: this.state.isClick\r\n        }])\r\n    }, () => {\r\n        console.log(\"index\", index)\r\n        console.log(\"indexs\", indexs)\r\n        console.log(\"state\", this.state.isClick)\r\n        const flagWinner = this.checkForWin(index, indexs)\r\n        this.state.token.methods.playMove(index, indexs, this.state.isClick, flagWinner).send({from: this.state.account}).\r\n        on('transactionHash', (hash) => {\r\n          this.setState({\r\n            isMyTurn: false,\r\n            isButton: true\r\n          })\r\n          if(this.state.isWinner == true) {\r\n            alert(\"Congratulations! You win.\")\r\n          }\r\n         })\r\n        .on('confirmation', function(confirmationNumber, receipt){  })\r\n        .on('receipt', function(receipt){\r\n        })\r\n\r\n\r\n\r\n        \r\n        \r\n    })\r\n  }\r\n  checkForWin = (index, indexs)=>{\r\n    const winlen = 0;\r\n    let letArr = this.state.twoArray.map((ele, index1) => {\r\n      let arr = Array(20).fill([])\r\n      let arrr=arr.map((item,row) => {\r\n          arr[this.state.idx] = this.state.isClickArr.filter((eles, index2) => {\r\n              return index1 == eles.idxs && eles.idx == row\r\n          })\r\n          let arrData = arr[this.state.idx].length > 0 ? arr[this.state.idx][0] : ''\r\n          return arrData\r\n      })\r\n      let arrs = Array(20).fill([])\r\n      arrs[indexs][index] = arrr\r\n      return arrs[indexs][index]\r\n  })\r\n  // (纵坐标，横坐标)[indexs][index]确定一个点的位置\r\n  console.log(letArr) // 按第一行、第二行...第二十行 纵坐标\r\n  console.log(index, 'index') // 横坐标\r\n  console.log(indexs, 'indexs') // 纵坐标\r\n  //列计数\r\n  let columnCount = 0;\r\n  // 向上下棋\r\n  for (let i = indexs + 1; i < 20; i++) {\r\n      if (letArr[i][index].isClick == this.state.isClick) {\r\n          columnCount++;\r\n      } else {\r\n          break;\r\n      }\r\n  }\r\n  // 向下下棋\r\n  for (let i = indexs - 1; i >= 0; i--) {\r\n      if (letArr[i][index].isClick == this.state.isClick) {\r\n          columnCount++;\r\n      } else {\r\n          break;\r\n      }\r\n  }\r\n  console.log(\"isClick\", this.state.isClick)\r\n  console.log(\"columnCount \", columnCount)\r\n  if (columnCount >= winlen) {\r\n      return this.defineWinned()\r\n      columnCount = 0\r\n      return;\r\n  }\r\n  //行计数\r\n  let lineCount = 0;\r\n  // 向左下棋\r\n  for (let i = index + 1; i < 20; i++) {\r\n      if (letArr[indexs][i].isClick == this.state.isClick) {\r\n          lineCount++;\r\n      } else {\r\n          break;\r\n      }\r\n  }\r\n  // 向右下棋\r\n  for (let i = index - 1; i >= 0; i--) {\r\n      if (letArr[indexs][i].isClick == this.state.isClick) {\r\n          lineCount++;\r\n      } else {\r\n          break;\r\n      }\r\n  }\r\n  if (lineCount >= winlen) {\r\n      return this.defineWinned()\r\n      lineCount = 0\r\n      return;\r\n  }\r\n  //斜行计数-左斜 \\\r\n  let obliqueLeftCount = 0;\r\n  // 向左上下棋↖\r\n  for (let i = index + 1, j = indexs + 1; i < 20 && j < 20; i++,j++) {\r\n      if (letArr[i][j].isClick == this.state.isClick) {\r\n          obliqueLeftCount++;\r\n      } else {\r\n          break;\r\n      }\r\n  }\r\n  // 向左下下棋↘\r\n  for (let i = index - 1, j = indexs - 1; i >= 0 && j >= 0; i--,j--) {\r\n      if (letArr[j][i].isClick == this.state.isClick) {\r\n          obliqueLeftCount++;\r\n      } else {\r\n          break;\r\n      }\r\n  }\r\n  if (obliqueLeftCount >= winlen) {\r\n      obliqueLeftCount = 0\r\n      return this.defineWinned()\r\n  }\r\n  //斜行计数-右斜 /\r\n  let obliqueRightCount = 0;\r\n  // 向右上下棋↗\r\n  for (let i = indexs + 1, j = index - 1; i < 20 && j >= 0; i++,j--) {\r\n      if (letArr[i][j].isClick == this.state.isClick) {\r\n          obliqueRightCount++;\r\n      } else {\r\n          break;\r\n      }\r\n  }\r\n  // 向左右下下棋↙\r\n  for (let i = indexs- 1, j = index + 1; i >= 0 && j < 20; i--,j++) {\r\n      if (letArr[i][j].isClick == this.state.isClick) {\r\n          obliqueRightCount++;\r\n      } else {\r\n          break;\r\n      }\r\n  }\r\n  if (obliqueRightCount >= winlen) {\r\n      return this.defineWinned()\r\n      obliqueRightCount = 0\r\n      return;\r\n  }\r\n  }\r\n  handleClick(index, indexs) {\r\n    let state = this.state.isClickArr.findIndex((n) => n.idx == index && n.idxs == indexs)\r\n    if (state != -1) {\r\n        return\r\n    }\r\n    this.setState({\r\n        data: this.state.data + 1,\r\n        idx: index,\r\n        idxs: indexs,\r\n        isClick: this.state.data % 2 === 0 ? 1 : 2,\r\n        isClickArr: this.state.isClickArr.concat([{\r\n            data: this.state.data + 1,\r\n            idx: index,\r\n            idxs: indexs,\r\n            isClick: this.state.data % 2 === 0 ? 1 : 2\r\n        }])\r\n    }, () => {\r\n        let letArr = this.state.twoArray.map((ele, index1) => {\r\n            let arr = Array(20).fill([])\r\n            let arrr=arr.map((item,row) => {\r\n                arr[this.state.idx] = this.state.isClickArr.filter((eles, index2) => {\r\n                    return index1 == eles.idxs && eles.idx == row\r\n                })\r\n                let arrData = arr[this.state.idx].length > 0 ? arr[this.state.idx][0] : ''\r\n                return arrData\r\n            })\r\n            let arrs = Array(20).fill([])\r\n            arrs[indexs][index] = arrr\r\n            return arrs[indexs][index]\r\n        })\r\n        // (纵坐标，横坐标)[indexs][index]确定一个点的位置\r\n        console.log(letArr) // 按第一行、第二行...第二十行 纵坐标\r\n        console.log(index, 'index') // 横坐标\r\n        console.log(indexs, 'indexs') // 纵坐标\r\n        //列计数\r\n        let columnCount = 0;\r\n        // 向上下棋\r\n        for (let i = indexs + 1; i < 20; i++) {\r\n            if (letArr[i][index].isClick == this.state.isClick) {\r\n                columnCount++;\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n        // 向下下棋\r\n        for (let i = indexs - 1; i >= 0; i--) {\r\n            if (letArr[i][index].isClick == this.state.isClick) {\r\n                columnCount++;\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n        if (columnCount >= 4) {\r\n            this.defineWinned()\r\n            columnCount = 0\r\n            return;\r\n        }\r\n        //行计数\r\n        let lineCount = 0;\r\n        // 向左下棋\r\n        for (let i = index + 1; i < 20; i++) {\r\n            if (letArr[indexs][i].isClick == this.state.isClick) {\r\n                lineCount++;\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n        // 向右下棋\r\n        for (let i = index - 1; i >= 0; i--) {\r\n            if (letArr[indexs][i].isClick == this.state.isClick) {\r\n                lineCount++;\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n        if (lineCount >= 4) {\r\n            this.defineWinned()\r\n            lineCount = 0\r\n            return;\r\n        }\r\n        //斜行计数-左斜 \\\r\n        let obliqueLeftCount = 0;\r\n        // 向左上下棋↖\r\n        for (let i = index + 1, j = indexs + 1; i < 20 && j < 20; i++,j++) {\r\n            if (letArr[i][j].isClick == this.state.isClick) {\r\n                obliqueLeftCount++;\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n        // 向左下下棋↘\r\n        for (let i = index - 1, j = indexs - 1; i >= 0 && j >= 0; i--,j--) {\r\n            if (letArr[j][i].isClick == this.state.isClick) {\r\n                obliqueLeftCount++;\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n        if (obliqueLeftCount >= 4) {\r\n            this.defineWinned()\r\n            obliqueLeftCount = 0\r\n            return;\r\n        }\r\n        //斜行计数-右斜 /\r\n        let obliqueRightCount = 0;\r\n        // 向右上下棋↗\r\n        for (let i = indexs + 1, j = index - 1; i < 20 && j >= 0; i++,j--) {\r\n            if (letArr[i][j].isClick == this.state.isClick) {\r\n                obliqueRightCount++;\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n        // 向左右下下棋↙\r\n        for (let i = indexs- 1, j = index + 1; i >= 0 && j < 20; i--,j++) {\r\n            if (letArr[i][j].isClick == this.state.isClick) {\r\n                obliqueRightCount++;\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n        console.log(obliqueRightCount,'obliqueRightCount')\r\n        if (obliqueRightCount >= 4) {\r\n            this.defineWinned()\r\n            obliqueRightCount = 0\r\n            return;\r\n        }\r\n    })\r\n}\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      account: '0x0',\r\n      account2: '0x0',\r\n      token: null,\r\n      totalSupply: 0,\r\n      tokenURIs: [],\r\n      cardArray: [],\r\n      cardsChosen: [],\r\n      cardsChosenId: [],\r\n      cardsWon: [],\r\n\r\n      ///////////////////////\r\n      arr: Array(20).fill(null),\r\n      isClick: null,\r\n      idx: 0, // 点击点的的横坐标\r\n      idxs: 0, // 点击点的纵坐标\r\n      isClickArr: [{\r\n                idx: null,\r\n                idxs: null,\r\n                isClick: null\r\n      }], // 存放点击过的点的数组\r\n      twoArray: Array(20).fill([]), // 存放点击过的点的数组\r\n      arrs: [],\r\n      isMyTurn: true,\r\n      isStart: false,\r\n      isButton: true,\r\n      isWinner: false,\r\n      doubleTurn: true,\r\n      nonce: 0\r\n    \r\n    }\r\n  }\r\n\r\n  render() {\r\n    var self = this;\r\n    //this.updateClickArr();\r\n    return (\r\n      \r\n      <div className='main'>\r\n        <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\r\n          <a\r\n            className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\r\n             //href=\"http://www.dappuniversity.com/bootcamp\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n          &nbsp; GoBang\r\n          </a>\r\n          <button type=\"button\" onClick={() => self.MasterSendMoneyToContract()}> start game </button>\r\n          <button type=\"button\" onClick={() => self.JoinGame()}> join game </button>\r\n          <button type=\"button\" onClick={() => self.CreateRoom()}> create room </button>\r\n          <ul className=\"navbar-nav px-3\">\r\n            <li className=\"nav-item text-nowrap d-none d-sm-none d-sm-block\">\r\n              <small className=\"text-muted\"><span id=\"account\">{this.state.account}</span></small>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n                {\r\n                    this.state.arr.map((item, index) => {\r\n                        return <div className='main-cell' key={index}>\r\n                            {\r\n                                this.state.arr.map((ele, indexs) => {\r\n                                    return <div className='main-cell-single' key={indexs}>\r\n                                        {\r\n                                            this.state.isClickArr.map((items, indexss) => {\r\n                                                return <div key={indexss} className='main-cell-click' onClick={() => self.handleClickNew(index, indexs)}>\r\n                                                    {\r\n                                                        items.isClick == 1 && items.idx == index && items.idxs == indexs\r\n                                                            ? <div className='main-cell-black'></div>\r\n                                                            : items.isClick == 2 && items.idx == index && items.idxs == indexs ? <div className='main-cell-white'></div>\r\n                                                                : ''\r\n                                                    }\r\n                                                </div>\r\n                                            })\r\n                                        }\r\n                                    </div>\r\n                                })\r\n                            }\r\n                        </div>\r\n                    })\r\n                }\r\n            </div>\r\n            \r\n    \r\n      /*\r\n      <div>\r\n        <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\r\n          <a\r\n            className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\r\n            href=\"http://www.dappuniversity.com/bootcamp\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n          <img src={brain} width=\"30\" height=\"30\" className=\"d-inline-block align-top\" alt=\"\" />\r\n          &nbsp; Memory Tokens\r\n          </a>\r\n          <ul className=\"navbar-nav px-3\">\r\n            <li className=\"nav-item text-nowrap d-none d-sm-none d-sm-block\">\r\n              <small className=\"text-muted\"><span id=\"account\">{this.state.account}</span></small>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n        <div className=\"container-fluid mt-5\">\r\n          <div className=\"row\">\r\n            <main role=\"main\" className=\"col-lg-12 d-flex text-center\">\r\n              <div className=\"content mr-auto ml-auto\">\r\n                <h1 className=\"d-4\">haha</h1>\r\n\r\n                <div className=\"grid mb-4\" >\r\n\r\n                { this.state.cardArray.map((card, key) => {\r\n                    return(\r\n                      <img\r\n                        key={key}\r\n                        src={this.chooseImage(key)}\r\n                        data-id={key}\r\n                        onClick={(event) => {\r\n                          let cardId = event.target.getAttribute('data-id')\r\n                          if(!this.state.cardsWon.includes(cardId.toString())) {\r\n                            this.flipCard(cardId)\r\n                          }\r\n                        }}\r\n                      />\r\n                    )\r\n                  })}\r\n\r\n                </div>\r\n\r\n                <div>\r\n                  <h5>Tokens Collected:<span id=\"result\">&nbsp;{this.state.tokenURIs.length}</span></h5>\r\n                  <div className=\"grid mb-4\" >\r\n\r\n                  { this.state.tokenURIs.map((tokenURI, key) => {\r\n                      return(\r\n                        <img\r\n                          key={key}\r\n                          src={tokenURI}\r\n                        />\r\n                      )\r\n                    })}\r\n\r\n                  </div>\r\n\r\n                </div>\r\n\r\n              </div>\r\n\r\n            </main>\r\n          </div>\r\n        </div>\r\n      </div>*/\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}