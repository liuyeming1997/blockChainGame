{"ast":null,"code":"import _regeneratorRuntime from \"E:\\\\masterstudy\\\\2022S1\\\\cycurrency\\\\research\\\\blockchain_game\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"E:\\\\masterstudy\\\\2022S1\\\\cycurrency\\\\research\\\\blockchain_game\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"E:\\\\masterstudy\\\\2022S1\\\\cycurrency\\\\research\\\\blockchain_game\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"E:\\\\masterstudy\\\\2022S1\\\\cycurrency\\\\research\\\\blockchain_game\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\masterstudy\\\\2022S1\\\\cycurrency\\\\research\\\\blockchain_game\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"E:\\\\masterstudy\\\\2022S1\\\\cycurrency\\\\research\\\\blockchain_game\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"E:\\\\masterstudy\\\\2022S1\\\\cycurrency\\\\research\\\\blockchain_game\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\masterstudy\\\\2022S1\\\\cycurrency\\\\research\\\\blockchain_game\\\\src\\\\components\\\\App.js\";\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\nimport './App.css';\nimport MemoryToken from '../abis/MemoryToken.json';\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.func();\n    }\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context2.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                _context2.next = 7;\n                break;\n\n              case 6:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\n                }\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var web3, accounts, networkId, networkData, abi, address, token;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                web3 = window.web3;\n                _context3.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context3.sent;\n                this.setState({\n                  account: accounts[0]\n                }); //this.setState({ account2: '0xabeFC1ca4EA200a3847fB21B8AB0F4c83B2A5303'})\n\n                _context3.next = 7;\n                return web3.eth.net.getId();\n\n              case 7:\n                networkId = _context3.sent;\n                networkData = MemoryToken.networks[networkId];\n\n                if (!networkData) {\n                  _context3.next = 19;\n                  break;\n                }\n\n                abi = MemoryToken.abi;\n                address = networkData.address; //const address = \"0x08425a1B69d7Bd7De5b857EafAA74466d89284af\"\n\n                _context3.next = 14;\n                return new web3.eth.Contract(abi, address);\n\n              case 14:\n                token = _context3.sent;\n                this.setState({\n                  token: token\n                });\n                this.initData();\n                _context3.next = 20;\n                break;\n\n              case 19:\n                alert('Smart contract not deployed to detected network.');\n\n              case 20:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }() ///////////////////////////////////////////////////////////////////\n\n  }, {\n    key: \"StartGame\",\n    value: function StartGame() {\n      var _this2 = this;\n\n      this.state.token.methods.GetRoom().call().then(function (result) {\n        if (result[3] == true) {\n          alert(\"Game already begin! you can not start game again\");\n          return;\n        }\n\n        if (result[0] == false) {\n          alert(\"there is no room, you can not start game\");\n          return;\n        }\n\n        if (result[2] != _this2.state.account) {\n          alert(\"you are not the room creator. You can not start this game\");\n          return;\n        }\n\n        if (result[1] == false) {\n          alert(\"nobody join the room, you can not start game\");\n          return;\n        }\n\n        console.log(\"this nonce\", _this2.state.nonce);\n\n        _this2.state.token.methods.startGame(_this2.state.nonce, _this2.state.account).send({\n          value: 3 * 1e18,\n          from: _this2.state.account\n        }).on('transactionHash', function (hash) {}).on('confirmation', function (confirmationNumber, receipt) {}).on('receipt', function (receipt) {}).on('error', function (error, receipt) {});\n      });\n    }\n  }, {\n    key: \"initDataNew\",\n    value: function initDataNew() {\n      this.setState({\n        isWinner: false,\n        isOver: false\n      });\n    }\n  }, {\n    key: \"JoinGame\",\n    value: function JoinGame() {\n      var _this3 = this;\n\n      this.state.token.methods.GetRoom().call().then(function (result) {\n        if (result[1] == true) {\n          alert(\"someone already join the room, you can not join\");\n          return;\n        }\n\n        if (result[2] == _this3.state.account) {\n          alert(\"you have already create room, can not join\");\n          return;\n        }\n\n        if (result[0] == false) {\n          alert(\"there is no room, you can not join\");\n        } else {\n          _this3.initDataNew();\n\n          var id = Math.floor(Math.random() * 100 + 1);\n\n          _this3.state.token.methods.joinGame(id, _this3.state.account).send({\n            value: 3 * 1e18,\n            from: _this3.state.account\n          }).on('transactionHash', function (hash) {\n            _this3.setState({\n              nonce: id\n            });\n\n            console.log(\"p2nonce: \", id);\n            alert(\"join room successfully\");\n          }).on('confirmation', function (confirmationNumber, receipt) {}).on('receipt', function (receipt) {//console.log(receipt);\n          }).on('error', function (error, receipt) {});\n        }\n      });\n    }\n  }, {\n    key: \"CreateRoom\",\n    value: function CreateRoom() {\n      var _this4 = this;\n\n      this.state.token.methods.GetRoom().call().then(function (result) {\n        if (result[0] == false) {\n          var id = Math.floor(Math.random() * 100 + 1); //console.log(\"id\", id)\n\n          _this4.state.token.methods.CreateRoom(id, _this4.state.account).send({\n            from: _this4.state.account\n          }).on('transactionHash', function (hash) {\n            _this4.setState({\n              nonce: id\n            });\n\n            _this4.initDataNew();\n\n            console.log(\"p1nonce: \", id); //console.log(\"nonce\", this.state.nonce)\n\n            alert(\"create room successfully\");\n          });\n        } else {\n          alert(\"already have a room, can not create\");\n        }\n      });\n    }\n  }, {\n    key: \"checkGameOver\",\n    value: function checkGameOver(index, indexs) {\n      this.state.token.methods.checkGameOver(index, indexs).call().then(console.log);\n    }\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.func = function () {\n      setInterval(function () {\n        _this.updateClickArr();\n      }, 5000);\n    };\n\n    _this.DeleteRoom = function () {\n      if (_this.state.isOver == false) {\n        alert(\"you can not delete room now\");\n        return;\n      }\n\n      _this.state.token.methods.destroyThisGame().send({\n        from: _this.state.account\n      }).on('transactionHash', function (hash) {\n        alert(\"Thank you to play this game! bye.\");\n      });\n    };\n\n    _this.getTmp = function () {\n      _this.state.token.methods.getTmp().call().then(function (result) {\n        console.log(result);\n      });\n    };\n\n    _this.defineWinned = function () {\n      _this.setState({\n        isWinner: true\n      });\n\n      return true;\n    };\n\n    _this.initData = function () {\n      _this.state.token.methods.reserveData().call().then(function (result) {\n        console.log(result[8], result[9]);\n\n        if (_this.state.account == result[3]) {\n          _this.initDataNew();\n\n          _this.setState({\n            isMyTurn: true,\n            doubleTurn: true,\n            nonce: result[9]\n          });\n        } else if (_this.state.account == result[5]) {\n          _this.initDataNew();\n\n          _this.setState({\n            isMyTurn: false,\n            doubleTurn: false,\n            nonce: result[8]\n          });\n        } else {\n          if (result[4] == true || result[6] == true) {\n            alert(\"There are ongoing competitions, please wait for the end of the competition\");\n            return;\n          }\n        }\n\n        console.log(\"isOver\", result[10]);\n\n        _this.setState({\n          isOver: result[10]\n        }); //console.log(\"local address: \", this.state.account)\n        //console.log(\"init first address: \", result[7])\n\n\n        if (result[7] == _this.state.account) {\n          //console.log(\"lym1\")\n          _this.setState({\n            isClick: 1\n          });\n        } else {\n          //console.log(\"lym2\")\n          _this.setState({\n            isClick: 2\n          });\n        }\n\n        if (result[0].length != _this.state.isClickArr.length - 1) {\n          //console.log(\"init res.length\", result[0].length)\n          //console.log(\"init local length\", this.state.isClickArr.length)\n          _this.setState({\n            isClickArr: []\n          });\n\n          result[0].map(function (ele, index1) {\n            _this.setState({\n              data: _this.state.data + 1,\n              isClickArr: _this.state.isClickArr.concat([{\n                data: _this.state.data + 1,\n                idx: result[0][index1],\n                idxs: result[1][index1],\n                isClick: result[2][index1]\n              }]),\n              isStart: result[4]\n            });\n          });\n        }\n      });\n    };\n\n    _this.updateClickArr = function () {\n      if (_this.state.isOver == true) {\n        return;\n      }\n\n      if (_this.state.isClock == true) {\n        _this.setState({\n          clockTime: _this.state.clockTime - 5\n        });\n      }\n\n      if (_this.state.isStart == false) {\n        _this.state.token.methods.getStart().call().then(function (result) {\n          if (result == true) {\n            //console.log(\"kaishi\")\n            _this.state.isStart = true;\n\n            _this.state.token.methods.getPlayer().call().then(function (result) {\n              // //console.log(result)\n              // //console.log(this.state.account)\n              if (result[0] == _this.state.account) {\n                _this.state.isMyTurn = true;\n              } else {\n                _this.state.isMyTurn = false;\n              }\n\n              if (result[2] == _this.state.account) {\n                _this.setState({\n                  isClick: 1\n                });\n\n                alert(\"Game Begin!Your first move. \");\n              } else {\n                _this.setState({\n                  isClick: 2\n                });\n\n                alert(\"Game Begin!Your backhand move.\");\n              } //console.log(this.state.isClick)\n              //console.log(\"now turn state\", this.state.isMyTurn)\n\n            });\n\n            if (_this.state.isMyTurn == true) {\n              _this.state.token.methods.getIndex().call().then(function (result) {\n                _this.setState({\n                  isClickArr: [{\n                    idx: null,\n                    idxs: null,\n                    isClick: null\n                  }]\n                }); //console.log(\"result1\", result)\n\n\n                if (result[0].length != 0) {\n                  result[0].map(function (ele, index1) {\n                    _this.setState({\n                      //data: this.state.data + 1,\n                      isClickArr: _this.state.isClickArr.concat([{\n                        idx: result[0][index1],\n                        idxs: result[1][index1],\n                        isClick: result[2][index1]\n                      }])\n                    });\n                  });\n                } //console.log(\"end\")\n\n              }); //console.log(\"end1\")\n\n            }\n          }\n        });\n      }\n\n      if (_this.state.doubleTurn == false) {\n        if (_this.state.isStart == false) {\n          return;\n        }\n\n        _this.state.token.methods.getPlayer().call().then(function (result) {\n          // //console.log(\"update res.length\", result[0].length)\n          //console.log(result)\n          // //console.log(\"update local length\", this.state.isClickArr.length)\n          if (result[0] == _this.state.account) {\n            alert(\"It's your turn.\");\n\n            _this.setState({\n              isClockOn: true,\n              clockTime: 20\n            });\n\n            _this.state.token.methods.getIndex().call().then(function (result) {\n              //console.log(\"res.length\", result[0].length)\n              //console.log(\"local length\", this.state.isClickArr.length)\n              _this.setState({\n                isClickArr: [{\n                  idx: null,\n                  idxs: null,\n                  isClick: null\n                }]\n              });\n\n              result[0].map(function (ele, index1) {\n                _this.setState({\n                  //data: this.state.data + 1,\n                  isClickArr: _this.state.isClickArr.concat([{\n                    idx: result[0][index1],\n                    idxs: result[1][index1],\n                    isClick: result[2][index1]\n                  }])\n                });\n              });\n            });\n\n            _this.state.token.methods.getWinner().call().then(function (result) {\n              if (result[0] == true) {\n                if (_this.state.account != result[1]) {\n                  alert(\"sorry! you lose\"); //destroy\n\n                  _this.setState({\n                    isOver: true\n                  });\n\n                  return;\n                }\n              }\n            });\n\n            _this.state.isMyTurn = true;\n            _this.state.doubleTurn = true;\n          }\n        });\n      }\n\n      if (_this.state.isMyTurn == false) {\n        _this.state.doubleTurn = false;\n      }\n    };\n\n    _this.handleClickNew = function (index, indexs) {\n      if (_this.state.isOver == true) {\n        alert(\"The competition is over\");\n        return;\n      }\n\n      if (_this.state.isStart == false) {\n        alert(\"The game hasn't even started yet.\");\n        return;\n      }\n\n      if (_this.state.isMyTurn == false) {\n        alert(\"This is not your turn\");\n        return;\n      }\n\n      if (_this.state.isButton == false) {\n        alert(\"You must finish processing this transaction\");\n        return;\n      }\n\n      var state = _this.state.isClickArr.findIndex(function (n) {\n        return n.idx == index && n.idxs == indexs;\n      });\n\n      if (state != -1) {\n        alert(\"There is already a piece in this position, please replay this move\");\n        return;\n      }\n\n      _this.state.isButton = false;\n\n      _this.setState({\n        idx: index,\n        idxs: indexs,\n        isClickArr: _this.state.isClickArr.concat([{\n          data: 0,\n          idx: index,\n          idxs: indexs,\n          isClick: _this.state.isClick\n        }])\n      }, function () {\n        //console.log(\"index\", index)\n        //console.log(\"indexs\", indexs)\n        //console.log(\"state\", this.state.isClick)\n        var flagWinner = _this.checkForWin(index, indexs);\n\n        _this.state.token.methods.playMove(index, indexs, _this.state.isClick, flagWinner).send({\n          from: _this.state.account\n        }).on('transactionHash', function (hash) {\n          _this.setState({\n            isClockOn: false,\n            isMyTurn: false,\n            isButton: true\n          });\n\n          if (_this.state.isWinner == true) {\n            alert(\"Congratulations! You win.\");\n\n            _this.setState({\n              isOver: true\n            });\n          }\n        }).on('confirmation', function (confirmationNumber, receipt) {}).on('receipt', function (receipt) {});\n      });\n    };\n\n    _this.checkForWin = function (index, indexs) {\n      var winlen = 4;\n\n      var letArr = _this.state.twoArray.map(function (ele, index1) {\n        var arr = Array(20).fill([]);\n        var arrr = arr.map(function (item, row) {\n          arr[_this.state.idx] = _this.state.isClickArr.filter(function (eles, index2) {\n            return index1 == eles.idxs && eles.idx == row;\n          });\n          var arrData = arr[_this.state.idx].length > 0 ? arr[_this.state.idx][0] : '';\n          return arrData;\n        });\n        var arrs = Array(20).fill([]);\n        arrs[indexs][index] = arrr;\n        return arrs[indexs][index];\n      });\n\n      var columnCount = 0;\n      console.log(letArr);\n      console.log(\"test:\", letArr[17][1]);\n      console.log(index, indexs); //////////////////////////////////////////////\n      //////////////////////////////////////////////////\n      ////////////////////////////////////////////////////\n\n      for (var i = indexs + 1; i < 20; i++) {\n        if (letArr[i][index].isClick == _this.state.isClick) {\n          columnCount++;\n        } else {\n          break;\n        }\n      }\n\n      for (var _i = indexs - 1; _i >= 0; _i--) {\n        if (letArr[_i][index].isClick == _this.state.isClick) {\n          columnCount++;\n        } else {\n          break;\n        }\n      } //console.log(\"isClick\", this.state.isClick)\n      //console.log(\"columnCount \", columnCount)\n\n\n      console.log(\"columnCount\", columnCount);\n\n      if (columnCount >= winlen) {\n        return _this.defineWinned();\n        columnCount = 0;\n        return;\n      }\n\n      var lineCount = 0;\n\n      for (var _i2 = index + 1; _i2 < 20; _i2++) {\n        if (letArr[indexs][_i2].isClick == _this.state.isClick) {\n          lineCount++;\n        } else {\n          break;\n        }\n      }\n\n      for (var _i3 = index - 1; _i3 >= 0; _i3--) {\n        if (letArr[indexs][_i3].isClick == _this.state.isClick) {\n          lineCount++;\n        } else {\n          break;\n        }\n      }\n\n      console.log(\"lineCount\", lineCount);\n\n      if (lineCount >= winlen) {\n        return _this.defineWinned();\n        lineCount = 0;\n        return;\n      }\n\n      var obliqueLeftCount = 0;\n\n      for (var _i4 = index + 1, j = indexs + 1; _i4 < 20 && j < 20; _i4++, j++) {\n        if (letArr[j][_i4].isClick == _this.state.isClick) {\n          obliqueLeftCount++;\n        } else {\n          break;\n        }\n      }\n\n      for (var _i5 = index - 1, _j = indexs - 1; _i5 >= 0 && _j >= 0; _i5--, _j--) {\n        if (letArr[_j][_i5].isClick == _this.state.isClick) {\n          obliqueLeftCount++;\n        } else {\n          break;\n        }\n      }\n\n      console.log(\"obliqueLeftCount\", obliqueLeftCount);\n\n      if (obliqueLeftCount >= winlen) {\n        obliqueLeftCount = 0;\n        return _this.defineWinned();\n      }\n\n      var obliqueRightCount = 0;\n\n      for (var _i6 = indexs + 1, _j2 = index - 1; _i6 < 20 && _j2 >= 0; _i6++, _j2--) {\n        if (letArr[_i6][_j2].isClick == _this.state.isClick) {\n          obliqueRightCount++;\n        } else {\n          break;\n        }\n      }\n\n      for (var _i7 = indexs - 1, _j3 = index + 1; _i7 >= 0 && _j3 < 20; _i7--, _j3++) {\n        if (letArr[_i7][_j3].isClick == _this.state.isClick) {\n          obliqueRightCount++;\n        } else {\n          break;\n        }\n      }\n\n      console.log(\"obliqueRightCount\", obliqueRightCount);\n\n      if (obliqueRightCount >= winlen) {\n        return _this.defineWinned();\n        obliqueRightCount = 0;\n        return;\n      }\n    };\n\n    _this.state = {\n      account: '0x0',\n      account2: '0x0',\n      token: null,\n      totalSupply: 0,\n      tokenURIs: [],\n      cardArray: [],\n      cardsChosen: [],\n      cardsChosenId: [],\n      cardsWon: [],\n      ///////////////////////\n      arr: Array(20).fill(null),\n      isClick: null,\n      idx: 0,\n      idxs: 0,\n      isClickArr: [{\n        idx: null,\n        idxs: null,\n        isClick: null\n      }],\n      twoArray: Array(20).fill([]),\n      arrs: [],\n      isMyTurn: true,\n      isStart: false,\n      isButton: true,\n      isWinner: false,\n      isOver: false,\n      doubleTurn: true,\n      nonce: 0,\n      clockTime: 0,\n      isClockOn: false\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var self = this;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"main\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"nav\", {\n        className: \"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        className: \"navbar-brand col-sm-3 col-md-2 mr-0\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 11\n        }\n      }, \"\\xA0 GoBang\"), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        onClick: function onClick() {\n          return self.StartGame();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 562,\n          columnNumber: 11\n        }\n      }, \" start game \"), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        onClick: function onClick() {\n          return self.JoinGame();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 563,\n          columnNumber: 11\n        }\n      }, \" join game \"), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        onClick: function onClick() {\n          return self.CreateRoom();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 11\n        }\n      }, \" create room \"), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        onClick: function onClick() {\n          return self.DeleteRoom();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 565,\n          columnNumber: 11\n        }\n      }, \" delete room \"), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"navbar-nav px-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 566,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        className: \"nav-item text-nowrap d-none d-sm-none d-sm-block\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 567,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"big\", {\n        className: \"text-muted\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        id: \"account\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 43\n        }\n      }, this.state.account))))), this.state.arr.map(function (item, index) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"main-cell\",\n          key: index,\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 574,\n            columnNumber: 32\n          }\n        }, _this5.state.arr.map(function (ele, indexs) {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            className: \"main-cell-single\",\n            key: indexs,\n            __self: _this5,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 577,\n              columnNumber: 44\n            }\n          }, _this5.state.isClickArr.map(function (items, indexss) {\n            return /*#__PURE__*/React.createElement(\"div\", {\n              key: indexss,\n              className: \"main-cell-click\",\n              onClick: function onClick() {\n                return self.handleClickNew(index, indexs);\n              },\n              __self: _this5,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 580,\n                columnNumber: 56\n              }\n            }, items.isClick == 1 && items.idx == index && items.idxs == indexs ? /*#__PURE__*/React.createElement(\"div\", {\n              className: \"main-cell-black\",\n              __self: _this5,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 583,\n                columnNumber: 63\n              }\n            }) : items.isClick == 2 && items.idx == index && items.idxs == indexs ? /*#__PURE__*/React.createElement(\"div\", {\n              className: \"main-cell-white\",\n              __self: _this5,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 584,\n                columnNumber: 130\n              }\n            }) : '');\n          }));\n        }));\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["E:/masterstudy/2022S1/cycurrency/research/blockchain_game/src/components/App.js"],"names":["React","Component","Web3","MemoryToken","App","loadWeb3","loadBlockchainData","func","window","ethereum","web3","enable","currentProvider","alert","eth","getAccounts","accounts","setState","account","net","getId","networkId","networkData","networks","abi","address","Contract","token","initData","state","methods","GetRoom","call","then","result","console","log","nonce","startGame","send","value","from","on","hash","confirmationNumber","receipt","error","isWinner","isOver","initDataNew","id","Math","floor","random","joinGame","CreateRoom","index","indexs","checkGameOver","props","setInterval","updateClickArr","DeleteRoom","destroyThisGame","getTmp","defineWinned","reserveData","isMyTurn","doubleTurn","isClick","length","isClickArr","map","ele","index1","data","concat","idx","idxs","isStart","isClock","clockTime","getStart","getPlayer","getIndex","isClockOn","getWinner","handleClickNew","isButton","findIndex","n","flagWinner","checkForWin","playMove","winlen","letArr","twoArray","arr","Array","fill","arrr","item","row","filter","eles","index2","arrData","arrs","columnCount","i","lineCount","obliqueLeftCount","j","obliqueRightCount","account2","totalSupply","tokenURIs","cardArray","cardsChosen","cardsChosenId","cardsWon","self","StartGame","JoinGame","items","indexss"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Web3 from 'web3'\r\nimport './App.css';\r\nimport MemoryToken from '../abis/MemoryToken.json'\r\n\r\nclass App extends Component {\r\n  async componentWillMount() {\r\n    await this.loadWeb3()\r\n    await this.loadBlockchainData()\r\n  }\r\n  componentDidMount() {\r\n    this.func();\r\n  }\r\n  async loadWeb3() {\r\n    if (window.ethereum) {\r\n      window.web3 = new Web3(window.ethereum)\r\n      await window.ethereum.enable()\r\n    }\r\n    else if (window.web3) {\r\n      window.web3 = new Web3(window.web3.currentProvider)\r\n    }\r\n    else {\r\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\r\n    }\r\n  }\r\n  func=() => {\r\n    setInterval(() => {\r\n      this.updateClickArr()\r\n    }, 5000);\r\n  }\r\n  async loadBlockchainData() {\r\n    const web3 = window.web3\r\n    const accounts = await web3.eth.getAccounts()\r\n   \r\n    this.setState({account: accounts[0]})\r\n    //this.setState({ account2: '0xabeFC1ca4EA200a3847fB21B8AB0F4c83B2A5303'})\r\n    const networkId = await web3.eth.net.getId()\r\n    const networkData = MemoryToken.networks[networkId]\r\n    if(networkData) {\r\n      const abi = MemoryToken.abi\r\n      const address = networkData.address\r\n      //const address = \"0x08425a1B69d7Bd7De5b857EafAA74466d89284af\"\r\n      const token = await new web3.eth.Contract(abi, address)\r\n      this.setState({ token })\r\n      this.initData();\r\n    } else {\r\n      alert('Smart contract not deployed to detected network.')\r\n    }\r\n  }\r\n\r\n  ///////////////////////////////////////////////////////////////////\r\n  StartGame() {\r\n    this.state.token.methods.GetRoom().call().then((result) => {\r\n      if(result[3] == true) {\r\n        alert(\"Game already begin! you can not start game again\")\r\n        return\r\n      }\r\n      if(result[0] == false) {\r\n        alert(\"there is no room, you can not start game\")\r\n        return\r\n      }\r\n      if(result[2] != this.state.account) {\r\n        alert(\"you are not the room creator. You can not start this game\")\r\n        return;\r\n      }\r\n      if(result[1] == false) {\r\n        alert(\"nobody join the room, you can not start game\")\r\n        return\r\n      }\r\n      console.log(\"this nonce\", this.state.nonce)\r\n      this.state.token.methods.startGame(this.state.nonce, this.state.account)\r\n      .send({value:3*1e18, from: this.state.account})\r\n          .on('transactionHash', function(hash){  })\r\n          .on('confirmation', function(confirmationNumber, receipt){  })\r\n          .on('receipt', function(receipt){\r\n        })\r\n          .on('error', function(error, receipt) { \r\n    });\r\n        \r\n      \r\n    })\r\n    \r\n  }\r\n  initDataNew() {\r\n    this.setState({\r\n      isWinner:false,\r\n      isOver:false\r\n    })\r\n  }\r\n  JoinGame() {\r\n    this.state.token.methods.GetRoom().call().then((result) => {\r\n      if(result[1] == true) {\r\n        alert(\"someone already join the room, you can not join\")\r\n        return\r\n      }\r\n      if(result[2] == this.state.account) {\r\n        alert(\"you have already create room, can not join\")\r\n        return\r\n      }\r\n      if(result[0] == false) {\r\n        alert(\"there is no room, you can not join\")\r\n      } else {\r\n        this.initDataNew()\r\n        const id = Math.floor((Math.random()*100)+1);\r\n        this.state.token.methods.joinGame(id, this.state.account).send({value:3*1e18, from: this.state.account})\r\n        .on('transactionHash', (hash) => {\r\n          this.setState({nonce: id})\r\n          console.log(\"p2nonce: \", id)\r\n          alert(\"join room successfully\")\r\n          })\r\n        .on('confirmation', function(confirmationNumber, receipt){  })\r\n        .on('receipt', function(receipt){\r\n            //console.log(receipt);\r\n        })\r\n        .on('error', function(error, receipt) { \r\n        });\r\n      }\r\n    })\r\n    \r\n  }\r\n  CreateRoom() {\r\n    this.state.token.methods.GetRoom().call().then((result) => {\r\n      if(result[0] == false) {\r\n        const id = Math.floor((Math.random()*100)+1); \r\n        //console.log(\"id\", id)\r\n     \r\n        this.state.token.methods.CreateRoom(id, this.state.account).send({from: this.state.account})\r\n        .on('transactionHash', (hash) => {\r\n        this.setState({nonce: id}) \r\n        this.initDataNew()\r\n        console.log(\"p1nonce: \", id)\r\n        //console.log(\"nonce\", this.state.nonce)\r\n        alert(\"create room successfully\") })\r\n        \r\n      } else {\r\n        alert(\"already have a room, can not create\")\r\n      }\r\n    })\r\n    \r\n  }\r\n  DeleteRoom = () => {\r\n    if(this.state.isOver == false) {\r\n      alert(\"you can not delete room now\")\r\n      return\r\n    } \r\n    this.state.token.methods.destroyThisGame().send({from: this.state.account})\r\n        .on('transactionHash', (hash) => {\r\n        alert(\"Thank you to play this game! bye.\") })\r\n  }\r\n  getTmp = () => {\r\n    this.state.token.methods.getTmp().call().then((result) => {\r\n      console.log(result)\r\n    })\r\n  }\r\n  defineWinned = () => {\r\n     this.setState({isWinner: true})\r\n     return true;\r\n  }\r\n\r\n  checkGameOver(index, indexs) {\r\n      this.state.token.methods.checkGameOver(index, indexs).call().then(console.log)\r\n  }\r\n  initData = () => {\r\n    this.state.token.methods.reserveData().call().then((result) => {\r\n      console.log(result[8], result[9])\r\n      if(this.state.account == result[3]) {\r\n        this.initDataNew()\r\n        this.setState({\r\n          isMyTurn: true,\r\n          doubleTurn:true,\r\n          nonce: result[9]})\r\n       \r\n      } else if(this.state.account == result[5]) {\r\n        this.initDataNew()\r\n        this.setState({\r\n          isMyTurn: false,\r\n          doubleTurn: false,\r\n          nonce: result[8]})\r\n      } else {\r\n        if(result[4] == true || result[6] == true) {\r\n           alert(\"There are ongoing competitions, please wait for the end of the competition\")\r\n           return\r\n        }\r\n      }\r\n      console.log(\"isOver\", result[10])\r\n      this.setState({isOver: result[10]})\r\n      //console.log(\"local address: \", this.state.account)\r\n      //console.log(\"init first address: \", result[7])\r\n      \r\n      if(result[7] == this.state.account) {\r\n        //console.log(\"lym1\")\r\n        this.setState({\r\n          isClick:1\r\n        })\r\n      } else {\r\n        //console.log(\"lym2\")\r\n        this.setState({\r\n          isClick:2\r\n        })\r\n      }\r\n\r\n\r\n      if(result[0].length != this.state.isClickArr.length - 1) {\r\n        //console.log(\"init res.length\", result[0].length)\r\n        //console.log(\"init local length\", this.state.isClickArr.length)\r\n        this.setState({isClickArr:[]})\r\n          result[0].map((ele, index1) => {\r\n            this.setState({\r\n              data: this.state.data + 1,\r\n              isClickArr: this.state.isClickArr.concat([{\r\n                  data: this.state.data + 1,\r\n                  idx: result[0][index1],\r\n                  idxs: result[1][index1],\r\n                  isClick: result[2][index1]\r\n              }]),\r\n              isStart:result[4]\r\n          }\r\n          )\r\n        })\r\n        \r\n      }\r\n     \r\n  })\r\n  }\r\n  updateClickArr= ()=> {\r\n   if(this.state.isOver == true) {\r\n     return\r\n   }\r\n    if(this.state.isClock == true) {\r\n      this.setState({clockTime: this.state.clockTime - 5})\r\n    }\r\n     if(this.state.isStart == false) {\r\n      this.state.token.methods.getStart().call().then((result) => {\r\n        if(result == true) {\r\n          //console.log(\"kaishi\")\r\n          this.state.isStart = true;\r\n          this.state.token.methods.getPlayer().call().then((result) => {\r\n            // //console.log(result)\r\n            // //console.log(this.state.account)\r\n            if(result[0] == this.state.account) {\r\n              this.state.isMyTurn = true;\r\n            } else {\r\n              this.state.isMyTurn = false;\r\n            }\r\n\r\n            if(result[2] == this.state.account) {\r\n              this.setState({isClick: 1})\r\n              alert(\"Game Begin!Your first move. \")\r\n            } else {\r\n              this.setState({isClick: 2})\r\n              alert(\"Game Begin!Your backhand move.\")\r\n            }\r\n            //console.log(this.state.isClick)\r\n            //console.log(\"now turn state\", this.state.isMyTurn)\r\n          })\r\n\r\n          if(this.state.isMyTurn == true) {\r\n            this.state.token.methods.getIndex().call().then((result) => {\r\n              this.setState({ isClickArr: [{\r\n                idx: null,\r\n                idxs: null,\r\n                isClick: null\r\n                }]})\r\n              //console.log(\"result1\", result)\r\n              if(result[0].length != 0) {\r\n                result[0].map((ele, index1) => {\r\n                  this.setState({\r\n                    //data: this.state.data + 1,\r\n                    isClickArr: this.state.isClickArr.concat([{\r\n                        idx: result[0][index1],\r\n                        idxs: result[1][index1],\r\n                        isClick: result[2][index1]\r\n                    }])\r\n                })\r\n              })\r\n              }\r\n              //console.log(\"end\")\r\n          })\r\n          //console.log(\"end1\")\r\n          }\r\n        }\r\n      })\r\n      \r\n     }\r\n    if(this.state.doubleTurn == false) {\r\n      if(this.state.isStart == false) {\r\n        return\r\n      }\r\n      this.state.token.methods.getPlayer().call().then((result) => {\r\n        // //console.log(\"update res.length\", result[0].length)\r\n        //console.log(result)\r\n        // //console.log(\"update local length\", this.state.isClickArr.length)\r\n        if(result[0] == this.state.account) {\r\n          alert(\"It's your turn.\")\r\n          this.setState({isClockOn:true,\r\n                          clockTime: 20})\r\n          this.state.token.methods.getIndex().call().then((result) => {\r\n            //console.log(\"res.length\", result[0].length)\r\n            //console.log(\"local length\", this.state.isClickArr.length)\r\n            this.setState({ isClickArr: [{\r\n              idx: null,\r\n              idxs: null,\r\n              isClick: null\r\n              }]})\r\n            result[0].map((ele, index1) => {\r\n              this.setState({\r\n                //data: this.state.data + 1,\r\n                isClickArr: this.state.isClickArr.concat([{\r\n                    idx: result[0][index1],\r\n                    idxs: result[1][index1],\r\n                    isClick: result[2][index1]\r\n                }])\r\n            })\r\n          })\r\n         \r\n      })\r\n      this.state.token.methods.getWinner().call().then((result) => {\r\n        if(result[0] == true) {\r\n          if(this.state.account != result[1]) {\r\n            alert(\"sorry! you lose\")\r\n            //destroy\r\n            this.setState({isOver: true})\r\n            return\r\n          }\r\n        }\r\n      })\r\n      this.state.isMyTurn = true;\r\n      this.state.doubleTurn = true;\r\n        } \r\n      })\r\n      \r\n    }\r\n    if(this.state.isMyTurn == false) {\r\n      this.state.doubleTurn = false;\r\n    }\r\n    \r\n  }\r\n  handleClickNew = (index, indexs)=> {\r\n    if(this.state.isOver == true) {\r\n      alert(\"The competition is over\")\r\n      return\r\n    }\r\n    if(this.state.isStart == false) {\r\n      alert(\"The game hasn't even started yet.\")\r\n      return\r\n   }\r\n   if(this.state.isMyTurn == false) {\r\n    alert(\"This is not your turn\")\r\n    return\r\n    }\r\n    if(this.state.isButton == false) {\r\n      alert(\"You must finish processing this transaction\")\r\n      return\r\n    }\r\n    let state = this.state.isClickArr.findIndex((n) => n.idx == index && n.idxs == indexs)\r\n    if (state != -1) {\r\n        alert(\"There is already a piece in this position, please replay this move\")\r\n        return\r\n    }\r\n\r\n    this.state.isButton = false;\r\n    this.setState({\r\n        idx: index,\r\n        idxs: indexs,\r\n        isClickArr: this.state.isClickArr.concat([{\r\n            data: 0,\r\n            idx: index,\r\n            idxs: indexs,\r\n            isClick: this.state.isClick\r\n        }])\r\n    }, () => {\r\n        //console.log(\"index\", index)\r\n        //console.log(\"indexs\", indexs)\r\n        //console.log(\"state\", this.state.isClick)\r\n        const flagWinner = this.checkForWin(index, indexs)\r\n        this.state.token.methods.playMove(index, indexs, this.state.isClick, flagWinner).send({from: this.state.account}).\r\n        on('transactionHash', (hash) => {\r\n          this.setState({\r\n            isClockOn: false,\r\n            isMyTurn: false,\r\n            isButton: true\r\n          })\r\n          if(this.state.isWinner == true) {\r\n            alert(\"Congratulations! You win.\")\r\n            this.setState({\r\n              isOver: true\r\n            })\r\n          }\r\n         })\r\n        .on('confirmation', function(confirmationNumber, receipt){  })\r\n        .on('receipt', function(receipt){\r\n        })\r\n\r\n\r\n\r\n        \r\n        \r\n    })\r\n  }\r\n  checkForWin = (index, indexs)=>{\r\n    const winlen = 4;\r\n    let letArr = this.state.twoArray.map((ele, index1) => {\r\n      let arr = Array(20).fill([])\r\n      let arrr=arr.map((item,row) => {\r\n          arr[this.state.idx] = this.state.isClickArr.filter((eles, index2) => {\r\n              return index1 == eles.idxs && eles.idx == row\r\n          })\r\n          let arrData = arr[this.state.idx].length > 0 ? arr[this.state.idx][0] : ''\r\n          return arrData\r\n      })\r\n      let arrs = Array(20).fill([])\r\n      arrs[indexs][index] = arrr\r\n      return arrs[indexs][index]\r\n  })\r\n  let columnCount = 0;\r\n  console.log(letArr)\r\n  console.log(\"test:\", letArr[17][1])\r\n  console.log(index, indexs)\r\n  //////////////////////////////////////////////\r\n\r\n\r\n  \r\n  //////////////////////////////////////////////////\r\n  ////////////////////////////////////////////////////\r\n  for (let i = indexs + 1; i < 20; i++) {\r\n      if (letArr[i][index].isClick == this.state.isClick) {\r\n          columnCount++;\r\n      } else {\r\n          break;\r\n      }\r\n  }\r\n  for (let i = indexs - 1; i >= 0; i--) {\r\n      if (letArr[i][index].isClick == this.state.isClick) {\r\n          columnCount++;\r\n      } else {\r\n          break;\r\n      }\r\n  }\r\n  //console.log(\"isClick\", this.state.isClick)\r\n  //console.log(\"columnCount \", columnCount)\r\n  console.log(\"columnCount\", columnCount)\r\n  if (columnCount >= winlen) {\r\n      return this.defineWinned()\r\n      columnCount = 0\r\n      return;\r\n  }\r\n  let lineCount = 0;\r\n  for (let i = index + 1; i < 20; i++) {\r\n      if (letArr[indexs][i].isClick == this.state.isClick) {\r\n          lineCount++;\r\n      } else {\r\n          break;\r\n      }\r\n  }\r\n  for (let i = index - 1; i >= 0; i--) {\r\n      if (letArr[indexs][i].isClick == this.state.isClick) {\r\n          lineCount++;\r\n      } else {\r\n          break;\r\n      }\r\n  }\r\n  console.log(\"lineCount\", lineCount)\r\n  if (lineCount >= winlen) {\r\n      return this.defineWinned()\r\n      lineCount = 0\r\n      return;\r\n  }\r\n  let obliqueLeftCount = 0;\r\n  for (let i = index + 1, j = indexs + 1; i < 20 && j < 20; i++,j++) {\r\n      if (letArr[j][i].isClick == this.state.isClick) {\r\n          obliqueLeftCount++;\r\n      } else {\r\n          break;\r\n      }\r\n  }\r\n  for (let i = index - 1, j = indexs - 1; i >= 0 && j >= 0; i--,j--) {\r\n      if (letArr[j][i].isClick == this.state.isClick) {\r\n          obliqueLeftCount++;\r\n      } else {\r\n          break;\r\n      }\r\n  }\r\n  console.log(\"obliqueLeftCount\", obliqueLeftCount)\r\n  if (obliqueLeftCount >= winlen) {\r\n      obliqueLeftCount = 0\r\n      return this.defineWinned()\r\n  }\r\n  let obliqueRightCount = 0;\r\n  for (let i = indexs + 1, j = index - 1; i < 20 && j >= 0; i++,j--) {\r\n      if (letArr[i][j].isClick == this.state.isClick) {\r\n          obliqueRightCount++;\r\n      } else {\r\n          break;\r\n      }\r\n  }\r\n  for (let i = indexs- 1, j = index + 1; i >= 0 && j < 20; i--,j++) {\r\n      if (letArr[i][j].isClick == this.state.isClick) {\r\n          obliqueRightCount++;\r\n      } else {\r\n          break;\r\n      }\r\n  }\r\n  console.log(\"obliqueRightCount\", obliqueRightCount)\r\n  if (obliqueRightCount >= winlen) {\r\n      return this.defineWinned()\r\n      obliqueRightCount = 0\r\n      return;\r\n  }\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      account: '0x0',\r\n      account2: '0x0',\r\n      token: null,\r\n      totalSupply: 0,\r\n      tokenURIs: [],\r\n      cardArray: [],\r\n      cardsChosen: [],\r\n      cardsChosenId: [],\r\n      cardsWon: [],\r\n\r\n      ///////////////////////\r\n      arr: Array(20).fill(null),\r\n      isClick: null,\r\n      idx: 0, \r\n      idxs: 0, \r\n      isClickArr: [{\r\n                idx: null,\r\n                idxs: null,\r\n                isClick: null\r\n      }], \r\n      twoArray: Array(20).fill([]), \r\n      arrs: [],\r\n      isMyTurn: true,\r\n      isStart: false,\r\n      isButton: true,\r\n      isWinner: false,\r\n      isOver: false,\r\n      doubleTurn: true,\r\n      nonce: 0,\r\n      clockTime: 0,\r\n      isClockOn: false\r\n    \r\n    }\r\n  }\r\n\r\n  render() {\r\n    var self = this;\r\n    return (\r\n      \r\n      <div className='main'>\r\n        <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\r\n          <a\r\n            className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n          &nbsp; GoBang\r\n          </a>\r\n          <button type=\"button\" onClick={() => self.StartGame()}> start game </button>\r\n          <button type=\"button\" onClick={() => self.JoinGame()}> join game </button>\r\n          <button type=\"button\" onClick={() => self.CreateRoom()}> create room </button>\r\n          <button type=\"button\" onClick={() => self.DeleteRoom()}> delete room </button>\r\n          <ul className=\"navbar-nav px-3\">\r\n            <li className=\"nav-item text-nowrap d-none d-sm-none d-sm-block\">\r\n              <big className=\"text-muted\"><span id=\"account\">{this.state.account}</span></big>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n                {\r\n                    this.state.arr.map((item, index) => {\r\n                        return <div className='main-cell' key={index}>\r\n                            {\r\n                                this.state.arr.map((ele, indexs) => {\r\n                                    return <div className='main-cell-single' key={indexs}>\r\n                                        {\r\n                                            this.state.isClickArr.map((items, indexss) => {\r\n                                                return <div key={indexss} className='main-cell-click' onClick={() => self.handleClickNew(index, indexs)}>\r\n                                                    {\r\n                                                        items.isClick == 1 && items.idx == index && items.idxs == indexs\r\n                                                            ? <div className='main-cell-black'></div>\r\n                                                            : items.isClick == 2 && items.idx == index && items.idxs == indexs ? <div className='main-cell-white'></div>\r\n                                                                : ''\r\n                                                    }\r\n                                                </div>\r\n                                            })\r\n                                        }\r\n                                    </div>\r\n                                })\r\n                            }\r\n                        </div>\r\n                    })\r\n                }\r\n            </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}